[{"/home/apiiit123/Documents/vscode/Team-8-main/client/src/index.js":"1","/home/apiiit123/Documents/vscode/Team-8-main/client/src/reportWebVitals.js":"2","/home/apiiit123/Documents/vscode/Team-8-main/client/src/App.js":"3","/home/apiiit123/Documents/vscode/Team-8-main/client/src/components/Navbar.js":"4","/home/apiiit123/Documents/vscode/Team-8-main/client/src/screens/Homescreen.js":"5","/home/apiiit123/Documents/vscode/Team-8-main/client/src/screens/RegisterScreen.js":"6","/home/apiiit123/Documents/vscode/Team-8-main/client/src/screens/Bookingscreen.js":"7","/home/apiiit123/Documents/vscode/Team-8-main/client/src/screens/LoginScreen.js":"8","/home/apiiit123/Documents/vscode/Team-8-main/client/src/screens/ProfileScreen.js":"9","/home/apiiit123/Documents/vscode/Team-8-main/client/src/screens/AdminScreen.js":"10","/home/apiiit123/Documents/vscode/Team-8-main/client/src/screens/LandingScreen.js":"11","/home/apiiit123/Documents/vscode/Team-8-main/client/src/components/Loader.js":"12","/home/apiiit123/Documents/vscode/Team-8-main/client/src/components/Error.js":"13","/home/apiiit123/Documents/vscode/Team-8-main/client/src/components/Room.js":"14","/home/apiiit123/Documents/vscode/Team-8-main/client/src/components/Success.js":"15","/home/apiiit123/Documents/vscode/Team-8-main/client/src/screens/MyBookingScreen.js":"16","/home/apiiit123/Documents/vscode/Team-8-main/client/src/screens/AdminBookingScreen.js":"17","/home/apiiit123/Documents/vscode/Team-8-main/client/src/screens/AdminRoomScreen.js":"18","/home/apiiit123/Documents/vscode/Team-8-main/client/src/screens/AdminUserScreen.js":"19","/home/apiiit123/Documents/vscode/Team-8-main/client/src/screens/AdminAddRoomScreen.js":"20","/home/apiiit123/Documents/vscode/Team-8-main/client/src/screens/FoodManagerScreen.js":"21","/home/apiiit123/Documents/vscode/Team-8-main/client/src/screens/FoodMenuScreen.js":"22"},{"size":500,"mtime":1730728780000,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":1730728780000,"results":"25","hashOfConfig":"24"},{"size":1378,"mtime":1732955465834,"results":"26","hashOfConfig":"24"},{"size":3098,"mtime":1732966249703,"results":"27","hashOfConfig":"24"},{"size":4653,"mtime":1730728780000,"results":"28","hashOfConfig":"24"},{"size":3071,"mtime":1730728780000,"results":"29","hashOfConfig":"24"},{"size":3834,"mtime":1730728780000,"results":"30","hashOfConfig":"24"},{"size":2182,"mtime":1730728780000,"results":"31","hashOfConfig":"24"},{"size":1293,"mtime":1730728780000,"results":"32","hashOfConfig":"24"},{"size":1242,"mtime":1732954204852,"results":"33","hashOfConfig":"24"},{"size":977,"mtime":1732965167363,"results":"34","hashOfConfig":"24"},{"size":448,"mtime":1730728780000,"results":"35","hashOfConfig":"24"},{"size":239,"mtime":1730728780000,"results":"36","hashOfConfig":"24"},{"size":1944,"mtime":1730728780000,"results":"37","hashOfConfig":"24"},{"size":204,"mtime":1730728780000,"results":"38","hashOfConfig":"24"},{"size":3221,"mtime":1730728780000,"results":"39","hashOfConfig":"24"},{"size":1726,"mtime":1730728780000,"results":"40","hashOfConfig":"24"},{"size":4387,"mtime":1732959353827,"results":"41","hashOfConfig":"24"},{"size":1909,"mtime":1730728780000,"results":"42","hashOfConfig":"24"},{"size":4456,"mtime":1730728780000,"results":"43","hashOfConfig":"24"},{"size":811,"mtime":1732961844148,"results":"44","hashOfConfig":"24"},{"size":9523,"mtime":1732963494624,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1k3qlok",{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"48"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"48"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"48"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"/home/apiiit123/Documents/vscode/Team-8-main/client/src/index.js",[],["105","106"],"/home/apiiit123/Documents/vscode/Team-8-main/client/src/reportWebVitals.js",[],"/home/apiiit123/Documents/vscode/Team-8-main/client/src/App.js",["107","108"],"import { BrowserRouter, Route, Link } from \"react-router-dom\";\n\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport Homescreen from \"./screens/Homescreen\";\nimport Bookingscreen from \"./screens/Bookingscreen\";\nimport RegisterScreen from \"./screens/RegisterScreen\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport ProfileScreen from \"./screens/ProfileScreen\";\nimport AdminScreen from \"./screens/AdminScreen\";\nimport LandingScreen from \"./screens/LandingScreen\";\nimport FoodManagerScreen from \"./screens/FoodManagerScreen\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <BrowserRouter>\n        <Route path=\"/\" exact component={LandingScreen} />\n        <Route path=\"/home\" exact component={Homescreen} />\n        <Route\n          path=\"/book/:roomid/:fromdate/:todate\"\n          exact\n          component={Bookingscreen}\n        />\n        <Route path=\"/register\" exact component={RegisterScreen} />\n        <Route path=\"/login\" exact component={LoginScreen} />\n        <Route path=\"/profile\" exact component={ProfileScreen} />\n        <Route path=\"/bookings\" exact component={ProfileScreen} />\n        <Route path=\"/admin\" exact component={AdminScreen} />\n        <Route path=\"/foodmanager\" exact component={FoodManagerScreen} />\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","/home/apiiit123/Documents/vscode/Team-8-main/client/src/components/Navbar.js",["109"],"/home/apiiit123/Documents/vscode/Team-8-main/client/src/screens/Homescreen.js",["110","111","112","113"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"antd/dist/antd.css\";\nimport { DatePicker, Space } from \"antd\";\nimport moment from \"moment\";\n\nimport Room from \"../components/Room\";\nimport Loader from \"../components/Loader\";\nimport Error from \"../components/Error\";\n\nimport AOS from \"aos\";\nimport \"aos/dist/aos.css\"; // You can also use <link> for styles\n// ..\nAOS.init({\n  duration: 1000,\n});\n\nconst { RangePicker } = DatePicker;\n\nfunction Homescreen() {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [rooms, setRooms] = useState([]);\n\n  const [fromDate, setFromDate] = useState();\n  const [toDate, setToDate] = useState();\n  const [duplicateRooms, setDuplicateRooms] = useState([]);\n  const [searchKey, setSearchKey] = useState(\"\");\n  const [type, setType] = useState(\"all\");\n\n  useEffect(() => {\n    async function fetchMyAPI() {\n      try {\n        setError(\"\");\n        setLoading(true);\n        const data = (await axios.get(\"/api/rooms/getallrooms\")).data;\n        //console.log(data);\n        setRooms(data);\n        setDuplicateRooms(data);\n      } catch (error) {\n        console.log(error);\n        setError(error);\n      }\n      setLoading(false);\n    }\n\n    fetchMyAPI();\n  }, []);\n\n  function filterByDate(dates) {\n    // console.log(moment(dates[0]).format(\"DD-MM-YYYY\"));\n    // console.log(moment(dates[1]).format(\"DD-MM-YYYY\"));\n    try {\n      setFromDate(moment(dates[0]).format(\"DD-MM-YYYY\"));\n      setToDate(moment(dates[1]).format(\"DD-MM-YYYY\"));\n\n      var tempRooms = [];\n      for (const room of duplicateRooms) {\n        var availability = false;\n        if (room.currentbookings.length > 0) {\n          for (const booking of room.currentbookings) {\n            if (\n              !moment(moment(dates[0]).format(\"DD-MM-YYYY\")).isBetween(\n                booking.fromdate,\n                booking.todate\n              ) &&\n              !moment(moment(dates[1]).format(\"DD-MM-YYYY\")).isBetween(\n                booking.fromdate,\n                booking.todate\n              )\n            ) {\n              if (\n                moment(dates[0]).format(\"DD-MM-YYYY\") !== booking.fromdate &&\n                moment(dates[0]).format(\"DD-MM-YYYY\") !== booking.todate &&\n                moment(dates[1]).format(\"DD-MM-YYYY\") !== booking.fromdate &&\n                moment(dates[1]).format(\"DD-MM-YYYY\") !== booking.todate\n              ) {\n                availability = true;\n              }\n            }\n          }\n        }\n        //\n        if (availability == true || room.currentbookings.length == 0) {\n          tempRooms.push(room);\n        }\n      }\n      setRooms(tempRooms);\n    } catch (error) {}\n  }\n\n  function filterBySearch() {\n    const tempRooms = duplicateRooms.filter((x) =>\n      x.name.toLowerCase().includes(searchKey.toLowerCase())\n    );\n    setRooms(tempRooms);\n  }\n  function filterByType(type) {\n    setType(type);\n    console.log(type);\n    if (type !== \"all\") {\n      const tempRooms = duplicateRooms.filter(\n        (x) => x.type.toLowerCase() == type.toLowerCase()\n      );\n      setRooms(tempRooms);\n    } else {\n      setRooms(duplicateRooms);\n    }\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"row mt-5 bs\">\n        <div className=\"col-md-3\">\n          <RangePicker format=\"DD-MM-YYYY\" onChange={filterByDate} />\n        </div>\n\n        <div className=\"col-md-5\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"search rooms\"\n            value={searchKey}\n            onChange={(e) => {\n              setSearchKey(e.target.value);\n            }}\n            onKeyUp={filterBySearch}\n          />\n        </div>\n        <div className=\"col-md-3\">\n          <select\n            className=\"form-control\"\n            value={type}\n            onChange={(e) => {\n              filterByType(e.target.value);\n            }}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"delux\">Delux</option>\n            <option value=\"non-delux\">Non-Delux</option>\n          </select>\n        </div>\n      </div>\n\n      <div className=\"row justify-content-center mt-5\">\n        {loading ? (\n          <Loader></Loader>\n        ) : error.length > 0 ? (\n          <Error msg={error}></Error>\n        ) : (\n          rooms.map((x) => {\n            return (\n              <div className=\"col-md-9 mt-3\" data-aos=\"flip-down\">\n                <Room room={x} fromDate={fromDate} toDate={toDate} />\n              </div>\n            );\n          })\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Homescreen;\n","/home/apiiit123/Documents/vscode/Team-8-main/client/src/screens/RegisterScreen.js",["114"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nimport Loader from \"../components/Loader\";\nimport Error from \"../components/Error\";\nimport Success from \"../components/Success\";\n\nfunction RegisterScreen() {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [cpassword, setCpassword] = useState(\"\");\n\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n\n  async function register() {\n    if (password === cpassword) {\n      const user = {\n        name,\n        email,\n        password,\n        cpassword,\n      };\n      //console.log(user);\n      setLoading(true);\n      setError(\"\");\n      setSuccess(\"\");\n      try {\n        const result = (await axios.post(\"/api/users/register\", user)).data;\n        console.log(result);\n        setSuccess(result);\n        setName(\"\");\n        setEmail(\"\");\n        setPassword(\"\");\n        setCpassword(\"\");\n      } catch (error) {\n        console.log(error);\n        setError(error);\n      }\n      setLoading(false);\n      window.location.href = \"/login\";\n    } else {\n      alert(\"Password not matched\");\n    }\n  }\n\n  return (\n    <div>\n      {loading && <Loader></Loader>}\n      {error.length > 0 && <Error msg={error}></Error>}\n\n      <div className=\"row justify-content-center mt-5\">\n        <div className=\"col-md-5 mt-5\">\n          {success.length > 0 && <Success msg={success}></Success>}\n          <div className=\"bs\">\n            <h2>Register</h2>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"name\"\n              value={name}\n              onChange={(e) => {\n                setName(e.target.value);\n              }}\n            />\n            <br></br>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"email\"\n              value={email}\n              onChange={(e) => {\n                setEmail(e.target.value);\n              }}\n            />\n              <br></br>\n            <input\n              type=\"password\"\n              className=\"form-control\"\n              placeholder=\"password\"\n              value={password}\n              onChange={(e) => {\n                setPassword(e.target.value);\n              }}\n            />\n              <br></br>\n            <input\n              type=\"password\"\n              className=\"form-control\"\n              placeholder=\"confirm password\"\n              value={cpassword}\n              onChange={(e) => {\n                setCpassword(e.target.value);\n              }}\n            />\n              <br></br>\n            {loading ? (\n              <div>Registering... Please Wait...</div>\n            ) : (\n              <button className=\"btn btn-primary mt-3\" onClick={register}>\n                Register\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default RegisterScreen;\n","/home/apiiit123/Documents/vscode/Team-8-main/client/src/screens/Bookingscreen.js",["115","116","117","118"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport moment from \"moment\";\n// import StripeCheckout from \"react-stripe-checkout\";\nimport Swal from \"sweetalert2\";\nimport Loader from \"../components/Loader\";\nimport Error from \"../components/Error\";\n\nfunction Bookingscreen({ match }) {\n\tconst [loading, setLoading] = useState(true);\n\tconst [error, setError] = useState(\"\");\n\tconst [room, setRoom] = useState({});\n\tconst [totalAmount, setTotalAmount] = useState(0);\n\tconst [totalDays, setTotalDays] = useState(0);\n\n\tconst roomid = match.params.roomid;\n\tconst fromdate = moment(match.params.fromdate, \"DD-MM-YYYY\");\n\tconst todate = moment(match.params.todate, \"DD-MM-YYYY\");\n\n\tuseEffect(() => {\n\t\tconst user = JSON.parse(localStorage.getItem(\"currentUser\"));\n\t\tif (!user) {\n\t\t\twindow.location.href = \"/login\";\n\t\t}\n\t\tasync function fetchMyAPI() {\n\t\t\ttry {\n\t\t\t\tsetError(\"\");\n\t\t\t\tsetLoading(true);\n\t\t\t\tconst data = (\n\t\t\t\t\tawait axios.post(\"/api/rooms/getroombyid\", {\n\t\t\t\t\t\troomid: match.params.roomid,\n\t\t\t\t\t})\n\t\t\t\t).data;\n\t\t\t\t//console.log(data);\n\t\t\t\tsetRoom(data);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(error);\n\t\t\t\tsetError(error);\n\t\t\t}\n\t\t\tsetLoading(false);\n\t\t}\n\n\t\tfetchMyAPI();\n\t}, []);\n\n\tuseEffect(() => {\n\t\tconst totaldays = moment.duration(todate.diff(fromdate)).asDays() + 1;\n\t\tsetTotalDays(totaldays);\n\t\tsetTotalAmount(totalDays * room.rentperday);\n\t}, [room]);\n\n\tconst bookRoom = async (token) => {\n\t\t// console.log(token);\n\t\tconst bookingDetails = {\n\t\t\troom,\n\t\t\tuserid: JSON.parse(localStorage.getItem(\"currentUser\"))._id,\n\t\t\tfromdate,\n\t\t\ttodate,\n\t\t\ttotalAmount,\n\t\t\ttotaldays: totalDays,\n\t\t\ttoken,\n\t\t};\n\n\t\ttry {\n\t\t\tsetLoading(true);\n\t\t\tconst result = await axios.post(\"/api/bookings/bookroom\", bookingDetails);\n\t\t\tsetLoading(false);\n\t\t\tSwal.fire(\n\t\t\t\t\"Congratulations\",\n\t\t\t\t\"Your Room Booked Successfully\",\n\t\t\t\t\"success\"\n\t\t\t).then((result) => {\n\t\t\t\twindow.location.href = \"/home\";\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tsetError(error);\n\t\t\tSwal.fire(\"Opps\", \"Error:\" + error, \"error\");\n\t\t}\n\t\tsetLoading(false);\n\t\t//TESTING CARD\n\t\t//https://stripe.com/docs/testing\n\t\t//https://www.npmjs.com/package/react-stripe-checkout\n\t\t// fetch(\"/save-stripe-token\", {\n\t\t//   method: \"POST\",\n\t\t//   body: JSON.stringify(token),\n\t\t// }).then((response) => {\n\t\t//   response.json().then((data) => {\n\t\t//     alert(`We are in business, ${data.email}`);\n\t\t//   });\n\t\t// });\n\t};\n\n\treturn (\n\t\t<div className=\"m-5\">\n\t\t\t{loading ? (\n\t\t\t\t<Loader></Loader>\n\t\t\t) : error.length > 0 ? (\n\t\t\t\t<Error msg={error}></Error>\n\t\t\t) : (\n\t\t\t\t<div className=\"row justify-content-center mt-5 bs\">\n\t\t\t\t\t<div className=\"col-md-6\">\n\t\t\t\t\t\t<h1>{room.name}</h1>\n\t\t\t\t\t\t<img src={room.imageurls[0]} alt=\"\" className=\"bigimg\" />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-md-6\">\n\t\t\t\t\t\t<div style={{ textAlign: \"right\" }}>\n\t\t\t\t\t\t\t<h1>Booking Details</h1>\n\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t\t\t<b>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\tName : {JSON.parse(localStorage.getItem(\"currentUser\")).name}\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t<p>From Date : {match.params.fromdate}</p>\n\t\t\t\t\t\t\t\t<p>To Date : {match.params.todate}</p>\n\t\t\t\t\t\t\t\t<p>Max Count : {room.maxcount}</p>\n\t\t\t\t\t\t\t</b>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div style={{ textAlign: \"right\" }}>\n\t\t\t\t\t\t\t<h1>Amount</h1>\n\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t\t\t<b>\n\t\t\t\t\t\t\t\t<p>Total Days : {totalDays}</p>\n\t\t\t\t\t\t\t\t<p>Rent per day : {room.rentperday}</p>\n\t\t\t\t\t\t\t\t<p>Total Amount : {totalAmount}</p>\n\t\t\t\t\t\t\t</b>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div style={{ float: \"right\" }}>\n\t\t\t\t\t\t\t{/* <StripeCheckout\n                amount={totalAmount * 100}\n                currency=\"USD\"\n                token={onToken}\n                stripeKey=\"YOUR PUBLIC STRIP API KEY\"\n              > */}\n\t\t\t\t\t\t\t<button className=\"btn btn-primary\" onClick={() => bookRoom()}>\n\t\t\t\t\t\t\t\tBook Now\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t{/* </StripeCheckout> */}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nexport default Bookingscreen;\n","/home/apiiit123/Documents/vscode/Team-8-main/client/src/screens/LoginScreen.js",["119","120","121","122","123"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nimport Loader from \"../components/Loader\";\nimport Error from \"../components/Error\";\nimport Success from \"../components/Success\";\n\nfunction LoginScreen() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n\n  async function Login() {\n    setLoading(true);\n    const user = {\n      email,\n      password,\n    };\n    //console.log(user);\n    try {\n      const result = (await axios.post(\"/api/users/login\", user)).data;\n      console.log(result);\n      localStorage.setItem(\"currentUser\", JSON.stringify(result));\n      if(result.isAdmin==true){\n        window.location.href = \"/admin\";\n      }else{\n        window.location.href = \"/home\";\n      }\n     \n    } catch (error) {\n      console.log(error);\n      setError(\"Invalid Credentials\");\n    }\n    setLoading(false);\n  }\n  return (\n    <div>\n      {loading && <Loader></Loader>}\n\n      <div className=\"row justify-content-center mt-5\">\n        <div className=\"col-md-5 mt-5\">\n          {error.length > 0 && <Error msg={error}></Error>}\n          <div className=\"bs\">\n            <h2>Login</h2>\n\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"email\"\n              value={email}\n              onChange={(e) => {\n                setEmail(e.target.value);\n              }}\n            />\n            <br></br>\n            <input\n              type=\"password\"\n              className=\"form-control\"\n              placeholder=\"password\"\n              value={password}\n              onChange={(e) => {\n                setPassword(e.target.value);\n              }}\n            />\n            <br></br>\n            {loading ? (\n              <div>Login...Please Wait...</div>\n            ) : (\n              <button className=\"btn btn-primary mt-3\" onClick={Login}>\n                Login\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default LoginScreen;\n","/home/apiiit123/Documents/vscode/Team-8-main/client/src/screens/ProfileScreen.js",["124","125"],"import React, { useState, useEffect } from \"react\";\nimport { Tabs } from \"antd\";\nimport { Tag } from \"antd\";\n\nimport MyBookingScreen from \"./MyBookingScreen\";\nconst { TabPane } = Tabs;\n\nfunction ProfileScreen() {\n  const user = JSON.parse(localStorage.getItem(\"currentUser\"));\n\n  useEffect(() => {\n    if (!user) {\n      window.location.href = \"/login\";\n    }\n  }, []);\n\n  function callback(key) {\n    console.log(key);\n  }\n\n  return (\n    <div className=\"ml-3 mt-3\">\n      <Tabs defaultActiveKey=\"1\" onChange={callback}>\n        <TabPane tab=\"Profile\" key=\"1\">\n          <div className=\"row\">\n            <div className=\"col-xs-12 ml-5 mb-5\">\n              <div className=\"bs\">\n                <p>My Profile</p>\n                <p>Name : {user.name}</p>\n                <p>Email : {user.email}</p>\n                <p>\n                  IsAdmin :{\" \"}\n                  {user.isAdmin ? (\n                    <Tag color=\"green\">YES</Tag>\n                  ) : (\n                    <Tag color=\"red\">NO</Tag>\n                  )}\n                </p>\n              </div>\n            </div>\n          </div>\n        </TabPane>\n        <TabPane tab=\"Booking\" key=\"2\">\n          <MyBookingScreen></MyBookingScreen>\n        </TabPane>\n      </Tabs>\n    </div>\n  );\n}\n\nexport default ProfileScreen;\n","/home/apiiit123/Documents/vscode/Team-8-main/client/src/screens/AdminScreen.js",["126","127","128"],"import React, { useState, useEffect } from \"react\";\n\nimport { Tabs } from \"antd\";\nimport AdminBookingScreen from \"./AdminBookingScreen\";\nimport AdminRoomScreen from \"./AdminRoomScreen\";\nimport AdminUserScreen from \"./AdminUserScreen\";\nimport AdminAddRoomScreen from \"./AdminAddRoomScreen\";\n\n\nconst { TabPane } = Tabs;\nfunction callback(key) {\n  console.log(key);\n}\nfunction AdminScreen() {\n  const user = JSON.parse(localStorage.getItem(\"currentUser\"));\n\n  useEffect(() => {\n    console.log(user);\n    if (!user || user.isAdmin == false) {\n      window.location.href = \"/home\";\n    }\n  }, []);\n\n  return (\n    <div className=\"ml-3 mt-3 mr-3 bs\">\n      <h1 className=\"text-center\">Admin Panel</h1>\n      <Tabs defaultActiveKey=\"1\" onChange={callback}>\n        <TabPane tab=\"Bookings\" key=\"1\">\n          <AdminBookingScreen></AdminBookingScreen>\n        </TabPane>\n        <TabPane tab=\"Rooms\" key=\"2\">\n          <AdminRoomScreen></AdminRoomScreen>\n        </TabPane>\n        <TabPane tab=\"Add Room\" key=\"3\">\n          <AdminAddRoomScreen></AdminAddRoomScreen>\n        </TabPane>\n        <TabPane tab=\"Users\" key=\"4\">\n          <AdminUserScreen></AdminUserScreen>\n        </TabPane>\n      </Tabs>\n    </div>\n  );\n}\n\nexport default AdminScreen;\n","/home/apiiit123/Documents/vscode/Team-8-main/client/src/screens/LandingScreen.js",["129","130"],"/home/apiiit123/Documents/vscode/Team-8-main/client/src/components/Loader.js",["131","132","133"],"import React, { useState } from \"react\";\nimport PropagateLoader from \"react-spinners/PacmanLoader\";\n\nfunction Loader() {\n  let [loading, setLoading] = useState(true);\n  let [color, setColor] = useState(\"#ffffff\");\n\n  return (\n    <div style={{ marginTop: \"150px\" }}>\n      <div className=\"sweet-loading text-center\">\n        <PropagateLoader color=\"#000\" loading={loading} css=\"\" size={25} />\n      </div>\n    </div>\n  );\n}\n\nexport default Loader;\n","/home/apiiit123/Documents/vscode/Team-8-main/client/src/components/Error.js",[],"/home/apiiit123/Documents/vscode/Team-8-main/client/src/components/Room.js",["134","135","136"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, Button, Carousel } from \"react-bootstrap\";\nimport { BrowserRouter, Route, Link } from \"react-router-dom\";\n\nfunction Room({ room, fromDate, toDate }) {\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  return (\n    <div className=\"row bs\">\n      <div className=\"col-md-4\">\n        <img src={room.imageurls[0]} className=\"smallimg\" alt=\"\" />\n      </div>\n      <div className=\"col-md-7\">\n        <h1>{room.name}</h1>\n        <b>\n          <p>Max Count : {room.maxcount}</p>\n          <p>Phone Number : {room.phonenumber}</p>\n          <p>Type : {room.type}</p>\n        </b>\n\n        <div style={{ float: \"right\" }}>\n          {fromDate && toDate && (\n            <Link to={`/book/${room._id}/${fromDate}/${toDate}`}>\n              <button className=\"btn btn-primary m-2\">Book Now</button>\n            </Link>\n          )}\n\n          <button className=\"btn btn-primary\" onClick={handleShow}>\n            View Detail\n          </button>\n        </div>\n      </div>\n\n      <Modal show={show} onHide={handleClose} size=\"lg\">\n        <Modal.Header>\n          <Modal.Title>{room.name}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Carousel prevLabel=\"\" nextLabel=\"\">\n            {room.imageurls.map((url) => {\n              return (\n                <Carousel.Item>\n                  <img\n                    className=\"d-block w-100 bigimg\"\n                    src={url}\n                    alt=\"First slide\"\n                  />\n                </Carousel.Item>\n              );\n            })}\n          </Carousel>\n          <p>{room.description}</p>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n}\n\nexport default Room;\n","/home/apiiit123/Documents/vscode/Team-8-main/client/src/components/Success.js",[],"/home/apiiit123/Documents/vscode/Team-8-main/client/src/screens/MyBookingScreen.js",["137","138"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\nimport { Tag } from \"antd\";\n\nimport Loader from \"../components/Loader\";\nimport Error from \"../components/Error\";\n\nfunction MyBookingScreen() {\n  const [bookings, setBookings] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const user = JSON.parse(localStorage.getItem(\"currentUser\"));\n\n  async function fetchMyAPI() {\n    setError(\"\");\n    setLoading(true);\n    try {\n      const data = (\n        await axios.post(\"/api/bookings/getbookingbyuserid\", {\n          userid: user._id,\n        })\n      ).data;\n      setBookings(data);\n    } catch (error) {\n      console.log(error);\n      setError(error);\n    }\n    setLoading(false);\n  }\n\n  useEffect(() => {\n    fetchMyAPI();\n  }, []);\n\n  async function cancelBooking(bookingid, roomid) {\n    setError(\"\");\n    setLoading(true);\n    try {\n      const data = (\n        await axios.post(\"/api/bookings/cancelbooking\", {\n          bookingid,\n          roomid,\n        })\n      ).data;\n      setLoading(false);\n      Swal.fire(\n        \"Congratulations\",\n        \"Your Room Cancelled Successfully\",\n        \"success\"\n      ).then((result) => {\n        fetchMyAPI();\n      });\n    } catch (error) {\n      console.log(error);\n      //setError(error);\n      Swal.fire(\"Opps\", \"Error:\" + error, \"error\");\n    }\n    setLoading(false);\n  }\n\n  return (\n    <div>\n      {loading ? (\n        <Loader></Loader>\n      ) : error.length > 0 ? (\n        <Error msg={error}></Error>\n      ) : (\n        <div className=\"row\">\n          <div className=\"col-md-6  ml-5\">\n            {bookings &&\n              bookings.map((booking) => {\n                return (\n                  <div className=\"bs\">\n                    <h1>{booking.room}</h1>\n                    <p>\n                      <b>BookingId:</b> {booking._id}\n                    </p>\n                    <p>\n                      <b>CheckIn:</b> {booking.fromdate}\n                    </p>\n                    <p>\n                      <b>CheckOut:</b> {booking.todate}\n                    </p>\n                    <p>\n                      <b>Amount:</b> {booking.totalamount}\n                    </p>\n                    <p>\n                      <b>Status:</b>{\" \"}\n                      {booking.status === \"booked\" ? (\n                        <Tag color=\"green\">CONFIRMED</Tag>\n                      ) : (\n                        <Tag color=\"red\">CANCELLED</Tag>\n                      )}\n                    </p>\n                    {booking.status === \"booked\" && (\n                      <div className=\"text-right\">\n                        <button\n                          className=\"btn btn-danger\"\n                          onClick={() => {\n                            cancelBooking(booking._id, booking.roomid);\n                          }}\n                        >\n                          Cancel Booking\n                        </button>\n                      </div>\n                    )}\n                  </div>\n                );\n              })}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default MyBookingScreen;\n","/home/apiiit123/Documents/vscode/Team-8-main/client/src/screens/AdminBookingScreen.js",["139"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Table, Tag, Space } from \"antd\";\n\nimport Loader from \"../components/Loader\";\nimport Error from \"../components/Error\";\n\nfunction AdminBookingScreen() {\n  const [bookings, setBookings] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const columns = [\n    {\n      title: \"transactionid\",\n      dataIndex: \"transactionid\",\n      key: \"transactionid\",\n    },\n    { title: \"roomid\", dataIndex: \"roomid\", key: \"roomid\" },\n    { title: \"room\", dataIndex: \"room\", key: \"room\" },\n    { title: \"fromdate\", dataIndex: \"fromdate\", key: \"fromdate\" },\n    { title: \"todate\", dataIndex: \"todate\", key: \"todate\" },\n    {\n      title: \"status\",\n      dataIndex: \"status\",\n      key: \"status\",\n      render: (status) => (\n        <>\n          {status === \"booked\" ? (\n            <Tag color=\"green\">CONFIRMED</Tag>\n          ) : (\n            <Tag color=\"red\">CANCELLED</Tag>\n          )}\n        </>\n      ),\n    },\n  ];\n\n  async function fetchMyData() {\n    setError(\"\");\n    setLoading(true);\n    try {\n      const data = (await axios.post(\"/api/bookings/getallbookings\")).data;\n      setBookings(data);\n    } catch (error) {\n      console.log(error);\n      setError(error);\n    }\n    setLoading(false);\n  }\n\n  useEffect(() => {\n    fetchMyData();\n  }, []);\n  return (\n    <div className=\"row\">\n      {loading ? (\n        <Loader></Loader>\n      ) : error.length > 0 ? (\n        <Error msg={error}></Error>\n      ) : (\n        <div className=\"col-md-12\">\n          <Table columns={columns} dataSource={bookings} />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default AdminBookingScreen;\n","/home/apiiit123/Documents/vscode/Team-8-main/client/src/screens/AdminRoomScreen.js",["140","141","142","143","144"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Table, Tag, Space, Button, Modal } from \"antd\";\n\nimport Loader from \"../components/Loader\";\nimport Error from \"../components/Error\";\n\nfunction AdminRoomScreen() {\n\tconst [rooms, setRooms] = useState([]);\n\tconst [loading, setLoading] = useState(true);\n\tconst [error, setError] = useState(\"\");\n\tconst [room,setRoom]=useState(\"\");\n\n\tconst updateRoom = async (room, updatedRoomData) => {\n\t\tconst roomId=room._id;\n\t\ttry {\n\t\t\tconst response = await axios.put(`/api/rooms/update/room/${roomId}`, updatedRoomData);\n\t\t\tconsole.log(\"Update Success:\", response.data);\n\t\t\tfetchMyData(); // Refresh rooms\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Error updating room:\", error.message);\n\t\t\tsetError(error.message);\n\t\t}\n\t};\n\t\n\t\n\tconst confirmUpdate = (room) => {\n\t\tconst roomId=room._id;\n\t\tModal.confirm({\n\t\t\t//title: \"Are you sure you want to update this room?\",\n\t\t\tcontent: (\n\t\t\t\t<div>\n\t\t\t\t\t<p>Please confirm the updated details for the room:</p>\n\t\t\t\t\t{/* Example fields for updating */}\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tplaceholder=\"Name\"\n\t\t\t\t\t\tid=\"roomName\"\n\t\t\t\t\t\tstyle={{ marginBottom: \"10px\", width: \"100%\" }}\n\t\t\t\t\t\t\n\t\t\t\t\t/>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tplaceholder=\"Max Count\"\n\t\t\t\t\t\tid=\"roomMaxCount\"\n\t\t\t\t\t\tstyle={{ marginBottom: \"10px\", width: \"100%\" }}\n\t\t\t\t\t/>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tplaceholder=\"Rent Per Day\"\n\t\t\t\t\t\tid=\"roomRentPerDay\"\n\t\t\t\t\t\tstyle={{ marginBottom: \"10px\", width: \"100%\" }}\n\t\t\t\t\t/>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tplaceholder=\"Phone Number\"\n\t\t\t\t\t\tid=\"roomPhoneNumber\"\n\t\t\t\t\t\tstyle={{ marginBottom: \"10px\", width: \"100%\" }}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t),\n\t\t\tokText: \"Update\",\n\t\t\tcancelText: \"Cancel\",\n\t\t\tonOk: () => {\n\t\t\t\tconst updatedRoomData = {\n\t\t\t\t\tname: document.getElementById(\"roomName\").value,\n\t\t\t\t\tmaxcount: document.getElementById(\"roomMaxCount\").value,\n\t\t\t\t\trentperday: document.getElementById(\"roomRentPerDay\").value,\n\t\t\t\t\tphonenumber: document.getElementById(\"roomPhoneNumber\").value,\n\t\t\t\t};\n\t\t\t\tupdateRoom(room, updatedRoomData);\n\t\t\t},\n\t\t});\n\t};\n\t\n\n\tconst deleteRoom = async (roomId) => {\n\t\tsetError(\"\");\n\t\tsetLoading(true);\n\t\ttry {\n\t\t\tawait axios.delete(`/api/rooms/delete/room/${roomId}`);\n\t\t\tfetchMyData(); // Refresh the room list after deletion\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t\tsetError(error.message);\n\t\t}\n\t\tsetLoading(false);\n\t};\n\n\tconst confirmDelete = (roomId) => {\n\t\tconsole.log(roomId);\n\t\tModal.confirm({\n\t\t\ttitle: \"Are you sure you want to delete this room?\",\n\t\t\tokText: \"Yes\",\n\t\t\tcancelText: \"No\",\n\t\t\tonOk: () => deleteRoom(roomId),\n\t\t});\n\t};\n\n\tconst columns = [\n\t\t{\n\t\t\ttitle: \"roomid\",\n\t\t\tdataIndex: \"_id\",\n\t\t\tkey: \"_id\",\n\t\t},\n\t\t{\n\t\t\ttitle: \"name\",\n\t\t\tdataIndex: \"name\",\n\t\t\tkey: \"name\",\n\t\t},\n\t\t{ title: \"maxcount\", dataIndex: \"maxcount\", key: \"maxcount\" },\n\t\t{ title: \"phonenumber\", dataIndex: \"phonenumber\", key: \"phonenumber\" },\n\t\t{ title: \"rentperday\", dataIndex: \"rentperday\", key: \"rentperday\" },\n\t\t{ title: \"type\", dataIndex: \"type\", key: \"type\" },\n\t\t{\n\t\t\ttitle: \"Actions\",\n\t\t\tdataIndex: \"actions\",\n\t\t\tkey: \"actions\",\n\t\t\trender: (text, record) => (\n\t\t\t\t<div style={{ display: \"flex\", alignItems: \"center\", gap: \"20px\" }}>\n\t\t\t\t\t<Button\n\t\t\t\t\t\ttype=\"link\"\n\t\t\t\t\t\tstyle={{ padding: 0, border: \"none\", color: \"#1890ff\" }}\n\t\t\t\t\t\t//onClick={() => console.log(`Update room with ID: ${record._id}`)}\n\t\t\t\t\t\tonClick={() => confirmUpdate(record)}\n\t\t\t\t\t>\n\t\t\t\t\t\tUpdate\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button\n\t\t\t\t\t\ttype=\"link\"\n\t\t\t\t\t\tstyle={{ padding: 0, border: \"none\", color: \"#ff4d4f\" }}\n\t\t\t\t\t\tonClick={() => confirmDelete(record._id)}\n\t\t\t\t\t>\n\t\t\t\t\t\tDelete\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t),\n\t\t},\n\t];\n\n\tasync function fetchMyData() {\n\t\tsetError(\"\");\n\t\tsetLoading(true);\n\t\ttry {\n\t\t\tconst data = (await axios.post(\"/api/rooms/getallrooms\")).data;\n\t\t\tsetRooms(data);\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t\tsetError(error);\n\t\t}\n\t\tsetLoading(false);\n\t}\n\n\tuseEffect(() => {\n\t\tfetchMyData();\n\t}, []);\n\n\treturn (\n\t\t<div className=\"row\">\n\t\t\t{loading ? (\n\t\t\t\t<Loader></Loader>\n\t\t\t) : error.length > 0 ? (\n\t\t\t\t<Error msg={error}></Error>\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<div className=\"col md-12\">\n\t\t\t\t\t\t<button className=\"btn btn-success\" onClick={fetchMyData}>\n\t\t\t\t\t\t\tRefresh\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-md-12\">\n\t\t\t\t\t\t<Table columns={columns} dataSource={rooms} />\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nexport default AdminRoomScreen;\n","/home/apiiit123/Documents/vscode/Team-8-main/client/src/screens/AdminUserScreen.js",[],"/home/apiiit123/Documents/vscode/Team-8-main/client/src/screens/AdminAddRoomScreen.js",["145","146","147","148"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Form, Input, InputNumber, Button, Select } from \"antd\";\n\nimport Swal from \"sweetalert2\";\n\nimport Loader from \"../components/Loader\";\nimport Error from \"../components/Error\";\nconst layout = {\n  labelCol: {\n    span: 4,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16,\n  },\n};\nfunction AdminAddRoomScreen() {\n  const { Option } = Select;\n\n  const [room, setRoom] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const [form] = Form.useForm();\n\n  const onFinish = async (values) => {\n    console.log(values);\n    setError(\"\");\n    setLoading(true);\n    try {\n      const data = (await axios.post(\"/api/rooms/addroom\", values)).data;\n      Swal.fire(\"Congratulations\", \"Your Room Added Successfully\", \"success\");\n      form.resetFields();\n    } catch (error) {\n      console.log(error);\n      setError(error);\n      Swal.fire(\"Opps\", \"Error:\" + error, \"error\");\n    }\n\n    setLoading(false);\n  };\n\n  const onReset = () => {\n    form.resetFields();\n  };\n\n  return (\n    <div className=\"row\">\n      {loading ? (\n        <Loader></Loader>\n      ) : error.length > 0 ? (\n        <Error msg={error}></Error>\n      ) : (\n        <div className=\"col-md-12\">\n          <Form\n            {...layout}\n            form={form}\n            name=\"control-hooks\"\n            onFinish={onFinish}\n          >\n            <Form.Item\n              name=\"name\"\n              label=\"name\"\n              rules={[\n                {\n                  required: true,\n                },\n              ]}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item\n              name=\"description\"\n              label=\"description\"\n              rules={[\n                {\n                  required: true,\n                },\n              ]}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item\n              name=\"maxcount\"\n              label=\"maxcount\"\n              rules={[\n                {\n                  required: true,\n                },\n              ]}\n            >\n              <InputNumber min={1} defaultChecked={1} />\n            </Form.Item>\n            <Form.Item\n              name=\"phonenumber\"\n              label=\"phonenumber\"\n              rules={[\n                {\n                  required: true,\n                },\n              ]}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item\n              name=\"rentperday\"\n              label=\"rentperday\"\n              rules={[\n                {\n                  required: true,\n                },\n              ]}\n            >\n              <InputNumber min={1} defaultChecked={1} />\n            </Form.Item>\n            <Form.Item\n              name=\"imageurl1\"\n              label=\"imageurl1\"\n              rules={[\n                {\n                  required: true,\n                },\n              ]}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item\n              name=\"imageurl2\"\n              label=\"imageurl2\"\n              rules={[\n                {\n                  //required: true,\n                },\n              ]}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item\n              name=\"imageurl3\"\n              label=\"imageurl3\"\n              rules={[\n                {\n                  //required: true,\n                },\n              ]}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item\n              name=\"type\"\n              label=\"type\"\n              rules={[\n                {\n                  required: true,\n                },\n              ]}\n            >\n              <Select placeholder=\"Select a room type\" allowClear>\n                <Option value=\"delux\">Delux</Option>\n                <Option value=\"non-delux\">Non-Delux</Option>\n              </Select>\n            </Form.Item>\n            <Form.Item {...tailLayout}>\n              <Button type=\"success\" htmlType=\"submit\">\n                Add\n              </Button>\n              <Button type=\"danger\" htmlType=\"button\" onClick={onReset}>\n                Reset\n              </Button>\n            </Form.Item>\n          </Form>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default AdminAddRoomScreen;\n","/home/apiiit123/Documents/vscode/Team-8-main/client/src/screens/FoodManagerScreen.js",["149","150"],"import React, { useState, useEffect } from \"react\";\nimport { Tabs } from \"antd\";\n\nimport FoodMenuScreen from \"./FoodMenuScreen.js\";\n\n\n\nconst { TabPane } = Tabs;\n\nfunction callback(key) {\n  console.log(key);\n}\n\nfunction FoodManagerScreen() {\n  const user = JSON.parse(localStorage.getItem(\"currentUser\"));\n\n  useEffect(() => {\n    console.log(user);\n    if (!user || user.isManager === false) {\n      window.location.href = \"/home\";\n    }\n  }, []);\n\n  return (\n    <div className=\"ml-3 mt-3 mr-3 bs\">\n      <h1 className=\"text-center\">Food Manager Panel</h1>\n      <Tabs defaultActiveKey=\"1\" onChange={callback}>\n       \n        <TabPane tab=\"Menu Items\" key=\"1\">\n          <FoodMenuScreen></FoodMenuScreen>\n        </TabPane>\n        \n        \n      </Tabs>\n    </div>\n  );\n}\n\nexport default FoodManagerScreen;\n","/home/apiiit123/Documents/vscode/Team-8-main/client/src/screens/FoodMenuScreen.js",[],{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","severity":1,"message":"156","line":1,"column":32,"nodeType":"157","messageId":"158","endLine":1,"endColumn":36},{"ruleId":"155","severity":1,"message":"159","line":3,"column":8,"nodeType":"157","messageId":"158","endLine":3,"endColumn":12},{"ruleId":"160","severity":1,"message":"161","line":32,"column":8,"nodeType":"162","endLine":32,"endColumn":63},{"ruleId":"155","severity":1,"message":"163","line":4,"column":22,"nodeType":"157","messageId":"158","endLine":4,"endColumn":27},{"ruleId":"164","severity":1,"message":"165","line":84,"column":26,"nodeType":"166","messageId":"167","endLine":84,"endColumn":28},{"ruleId":"164","severity":1,"message":"165","line":84,"column":65,"nodeType":"166","messageId":"167","endLine":84,"endColumn":67},{"ruleId":"164","severity":1,"message":"165","line":103,"column":37,"nodeType":"166","messageId":"167","endLine":103,"endColumn":39},{"ruleId":"155","severity":1,"message":"168","line":1,"column":27,"nodeType":"157","messageId":"158","endLine":1,"endColumn":36},{"ruleId":"155","severity":1,"message":"169","line":16,"column":8,"nodeType":"157","messageId":"158","endLine":16,"endColumn":14},{"ruleId":"170","severity":1,"message":"171","line":44,"column":5,"nodeType":"172","endLine":44,"endColumn":7,"suggestions":"173"},{"ruleId":"170","severity":1,"message":"174","line":50,"column":5,"nodeType":"172","endLine":50,"endColumn":11,"suggestions":"175"},{"ruleId":"155","severity":1,"message":"176","line":66,"column":10,"nodeType":"157","messageId":"158","endLine":66,"endColumn":16},{"ruleId":"155","severity":1,"message":"168","line":1,"column":27,"nodeType":"157","messageId":"158","endLine":1,"endColumn":36},{"ruleId":"155","severity":1,"message":"177","line":6,"column":8,"nodeType":"157","messageId":"158","endLine":6,"endColumn":15},{"ruleId":"155","severity":1,"message":"178","line":14,"column":10,"nodeType":"157","messageId":"158","endLine":14,"endColumn":17},{"ruleId":"155","severity":1,"message":"179","line":14,"column":19,"nodeType":"157","messageId":"158","endLine":14,"endColumn":29},{"ruleId":"164","severity":1,"message":"165","line":27,"column":24,"nodeType":"166","messageId":"167","endLine":27,"endColumn":26},{"ruleId":"155","severity":1,"message":"180","line":1,"column":17,"nodeType":"157","messageId":"158","endLine":1,"endColumn":25},{"ruleId":"170","severity":1,"message":"181","line":15,"column":6,"nodeType":"172","endLine":15,"endColumn":8,"suggestions":"182"},{"ruleId":"155","severity":1,"message":"180","line":1,"column":17,"nodeType":"157","messageId":"158","endLine":1,"endColumn":25},{"ruleId":"164","severity":1,"message":"165","line":19,"column":31,"nodeType":"166","messageId":"167","endLine":19,"endColumn":33},{"ruleId":"170","severity":1,"message":"181","line":22,"column":6,"nodeType":"172","endLine":22,"endColumn":8,"suggestions":"183"},{"ruleId":"155","severity":1,"message":"184","line":2,"column":10,"nodeType":"157","messageId":"158","endLine":2,"endColumn":23},{"ruleId":"155","severity":1,"message":"185","line":2,"column":25,"nodeType":"157","messageId":"158","endLine":2,"endColumn":30},{"ruleId":"155","severity":1,"message":"186","line":5,"column":17,"nodeType":"157","messageId":"158","endLine":5,"endColumn":27},{"ruleId":"155","severity":1,"message":"187","line":6,"column":8,"nodeType":"157","messageId":"158","endLine":6,"endColumn":13},{"ruleId":"155","severity":1,"message":"188","line":6,"column":15,"nodeType":"157","messageId":"158","endLine":6,"endColumn":23},{"ruleId":"155","severity":1,"message":"168","line":1,"column":27,"nodeType":"157","messageId":"158","endLine":1,"endColumn":36},{"ruleId":"155","severity":1,"message":"184","line":3,"column":10,"nodeType":"157","messageId":"158","endLine":3,"endColumn":23},{"ruleId":"155","severity":1,"message":"185","line":3,"column":25,"nodeType":"157","messageId":"158","endLine":3,"endColumn":30},{"ruleId":"170","severity":1,"message":"189","line":35,"column":6,"nodeType":"172","endLine":35,"endColumn":8,"suggestions":"190"},{"ruleId":"155","severity":1,"message":"191","line":41,"column":13,"nodeType":"157","messageId":"158","endLine":41,"endColumn":17},{"ruleId":"155","severity":1,"message":"163","line":3,"column":22,"nodeType":"157","messageId":"158","endLine":3,"endColumn":27},{"ruleId":"155","severity":1,"message":"192","line":3,"column":17,"nodeType":"157","messageId":"158","endLine":3,"endColumn":20},{"ruleId":"155","severity":1,"message":"163","line":3,"column":22,"nodeType":"157","messageId":"158","endLine":3,"endColumn":27},{"ruleId":"155","severity":1,"message":"193","line":12,"column":9,"nodeType":"157","messageId":"158","endLine":12,"endColumn":13},{"ruleId":"155","severity":1,"message":"194","line":12,"column":14,"nodeType":"157","messageId":"158","endLine":12,"endColumn":21},{"ruleId":"155","severity":1,"message":"195","line":28,"column":9,"nodeType":"157","messageId":"158","endLine":28,"endColumn":15},{"ruleId":"155","severity":1,"message":"168","line":1,"column":27,"nodeType":"157","messageId":"158","endLine":1,"endColumn":36},{"ruleId":"155","severity":1,"message":"193","line":26,"column":10,"nodeType":"157","messageId":"158","endLine":26,"endColumn":14},{"ruleId":"155","severity":1,"message":"194","line":26,"column":16,"nodeType":"157","messageId":"158","endLine":26,"endColumn":23},{"ruleId":"155","severity":1,"message":"191","line":37,"column":13,"nodeType":"157","messageId":"158","endLine":37,"endColumn":17},{"ruleId":"155","severity":1,"message":"180","line":1,"column":17,"nodeType":"157","messageId":"158","endLine":1,"endColumn":25},{"ruleId":"170","severity":1,"message":"181","line":22,"column":6,"nodeType":"172","endLine":22,"endColumn":8,"suggestions":"196"},"no-native-reassign",["197"],"no-negated-in-lhs",["198"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'logo' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Space' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","'roomid' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'match.params.roomid'. Either include it or remove the dependency array.","ArrayExpression",["199"],"React Hook useEffect has missing dependencies: 'fromdate', 'todate', and 'totalDays'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setTotalAmount' needs the current value of 'totalDays'.",["200"],"'result' is assigned a value but never used.","'Success' is defined but never used.","'success' is assigned a value but never used.","'setSuccess' is assigned a value but never used.","'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["201"],["202"],"'BrowserRouter' is defined but never used.","'Route' is defined but never used.","'setLoading' is assigned a value but never used.","'color' is assigned a value but never used.","'setColor' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchMyAPI'. Either include it or remove the dependency array.",["203"],"'data' is assigned a value but never used.","'Tag' is defined but never used.","'room' is assigned a value but never used.","'setRoom' is assigned a value but never used.","'roomId' is assigned a value but never used.",["204"],"no-global-assign","no-unsafe-negation",{"desc":"205","fix":"206"},{"desc":"207","fix":"208"},{"desc":"209","fix":"210"},{"desc":"209","fix":"211"},{"desc":"212","fix":"213"},{"desc":"209","fix":"214"},"Update the dependencies array to be: [match.params.roomid]",{"range":"215","text":"216"},"Update the dependencies array to be: [fromdate, room, todate, totalDays]",{"range":"217","text":"218"},"Update the dependencies array to be: [user]",{"range":"219","text":"220"},{"range":"221","text":"220"},"Update the dependencies array to be: [fetchMyAPI]",{"range":"222","text":"223"},{"range":"224","text":"220"},[1209,1211],"[match.params.roomid]",[1385,1391],"[fromdate, room, todate, totalDays]",[365,367],"[user]",[589,591],[850,852],"[fetchMyAPI]",[443,445]]