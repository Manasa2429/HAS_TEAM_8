{"ast":null,"code":"var _jsxFileName = \"/home/apiiit123/Documents/vscode/Team-8-main/client/src/screens/AdminRoomScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Table, Tag, Space, Button, Modal } from \"antd\";\nimport Loader from \"../components/Loader\";\nimport Error from \"../components/Error\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction AdminRoomScreen() {\n  _s();\n\n  const [rooms, setRooms] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n\n  const updateRoom = async (room, updatedRoomData) => {\n    const roomId = room._id;\n\n    try {\n      const response = await axios.put(`/api/rooms/update/room/${roomId}`, updatedRoomData);\n      console.log(\"Update Success:\", response.data);\n      fetchMyData(); // Refresh rooms\n    } catch (error) {\n      console.error(\"Error updating room:\", error.message);\n      setError(error.message);\n    }\n  };\n\n  const confirmUpdate = room => {\n    const roomId = room._id;\n    Modal.confirm({\n      //title: \"Are you sure you want to update this room?\",\n      content: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please confirm the updated details for the room:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Name\",\n          id: \"roomName\",\n          style: {\n            marginBottom: \"10px\",\n            width: \"100%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"Max Count\",\n          id: \"roomMaxCount\",\n          style: {\n            marginBottom: \"10px\",\n            width: \"100%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"Rent Per Day\",\n          id: \"roomRentPerDay\",\n          style: {\n            marginBottom: \"10px\",\n            width: \"100%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Phone Number\",\n          id: \"roomPhoneNumber\",\n          style: {\n            marginBottom: \"10px\",\n            width: \"100%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 5\n      }, this),\n      okText: \"Update\",\n      cancelText: \"Cancel\",\n      onOk: () => {\n        const updatedRoomData = {\n          name: document.getElementById(\"roomName\").value,\n          maxcount: document.getElementById(\"roomMaxCount\").value,\n          rentperday: document.getElementById(\"roomRentPerDay\").value,\n          phonenumber: document.getElementById(\"roomPhoneNumber\").value\n        };\n        updateRoom(room, updatedRoomData);\n      }\n    });\n  };\n\n  const deleteRoom = async roomId => {\n    setError(\"\");\n    setLoading(true);\n\n    try {\n      await axios.delete(`/api/rooms/delete/room/${roomId}`);\n      fetchMyData(); // Refresh the room list after deletion\n    } catch (error) {\n      console.log(error);\n      setError(error.message);\n    }\n\n    setLoading(false);\n  };\n\n  const confirmDelete = roomId => {\n    console.log(roomId);\n    Modal.confirm({\n      title: \"Are you sure you want to delete this room?\",\n      okText: \"Yes\",\n      cancelText: \"No\",\n      onOk: () => deleteRoom(roomId)\n    });\n  };\n\n  const columns = [{\n    title: \"roomid\",\n    dataIndex: \"_id\",\n    key: \"_id\"\n  }, {\n    title: \"name\",\n    dataIndex: \"name\",\n    key: \"name\"\n  }, {\n    title: \"maxcount\",\n    dataIndex: \"maxcount\",\n    key: \"maxcount\"\n  }, {\n    title: \"phonenumber\",\n    dataIndex: \"phonenumber\",\n    key: \"phonenumber\"\n  }, {\n    title: \"rentperday\",\n    dataIndex: \"rentperday\",\n    key: \"rentperday\"\n  }, {\n    title: \"type\",\n    dataIndex: \"type\",\n    key: \"type\"\n  }, {\n    title: \"Actions\",\n    dataIndex: \"actions\",\n    key: \"actions\",\n    render: (text, record) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        alignItems: \"center\",\n        gap: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"link\",\n        style: {\n          padding: 0,\n          border: \"none\",\n          color: \"#1890ff\"\n        } //onClick={() => console.log(`Update room with ID: ${record._id}`)}\n        ,\n        onClick: () => confirmUpdate(record),\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"link\",\n        style: {\n          padding: 0,\n          border: \"none\",\n          color: \"#ff4d4f\"\n        },\n        onClick: () => confirmDelete(record._id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 5\n    }, this)\n  }];\n\n  async function fetchMyData() {\n    setError(\"\");\n    setLoading(true);\n\n    try {\n      const data = (await axios.post(\"/api/rooms/getallrooms\")).data;\n      setRooms(data);\n    } catch (error) {\n      console.log(error);\n      setError(error);\n    }\n\n    setLoading(false);\n  }\n\n  useEffect(() => {\n    fetchMyData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 5\n    }, this) : error.length > 0 ? /*#__PURE__*/_jsxDEV(Error, {\n      msg: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col md-12\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success\",\n          onClick: fetchMyData,\n          children: \"Refresh\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12\",\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          columns: columns,\n          dataSource: rooms\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 3\n  }, this);\n}\n\n_s(AdminRoomScreen, \"22+dPHQJdAtB9C2XQYWyENQy3Oc=\");\n\n_c = AdminRoomScreen;\nexport default AdminRoomScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminRoomScreen\");","map":{"version":3,"sources":["/home/apiiit123/Documents/vscode/Team-8-main/client/src/screens/AdminRoomScreen.js"],"names":["React","useState","useEffect","axios","Table","Tag","Space","Button","Modal","Loader","Error","AdminRoomScreen","rooms","setRooms","loading","setLoading","error","setError","room","setRoom","updateRoom","updatedRoomData","roomId","_id","response","put","console","log","data","fetchMyData","message","confirmUpdate","confirm","content","marginBottom","width","okText","cancelText","onOk","name","document","getElementById","value","maxcount","rentperday","phonenumber","deleteRoom","delete","confirmDelete","title","columns","dataIndex","key","render","text","record","display","alignItems","gap","padding","border","color","post","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Table, Tag, Space, Button, Modal } from \"antd\";\n\nimport Loader from \"../components/Loader\";\nimport Error from \"../components/Error\";\n\nfunction AdminRoomScreen() {\n\tconst [rooms, setRooms] = useState([]);\n\tconst [loading, setLoading] = useState(true);\n\tconst [error, setError] = useState(\"\");\n\tconst [room,setRoom]=useState(\"\");\n\n\tconst updateRoom = async (room, updatedRoomData) => {\n\t\tconst roomId=room._id;\n\t\ttry {\n\t\t\tconst response = await axios.put(`/api/rooms/update/room/${roomId}`, updatedRoomData);\n\t\t\tconsole.log(\"Update Success:\", response.data);\n\t\t\tfetchMyData(); // Refresh rooms\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Error updating room:\", error.message);\n\t\t\tsetError(error.message);\n\t\t}\n\t};\n\t\n\t\n\tconst confirmUpdate = (room) => {\n\t\tconst roomId=room._id;\n\t\tModal.confirm({\n\t\t\t//title: \"Are you sure you want to update this room?\",\n\t\t\tcontent: (\n\t\t\t\t<div>\n\t\t\t\t\t<p>Please confirm the updated details for the room:</p>\n\t\t\t\t\t{/* Example fields for updating */}\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tplaceholder=\"Name\"\n\t\t\t\t\t\tid=\"roomName\"\n\t\t\t\t\t\tstyle={{ marginBottom: \"10px\", width: \"100%\" }}\n\t\t\t\t\t\t\n\t\t\t\t\t/>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tplaceholder=\"Max Count\"\n\t\t\t\t\t\tid=\"roomMaxCount\"\n\t\t\t\t\t\tstyle={{ marginBottom: \"10px\", width: \"100%\" }}\n\t\t\t\t\t/>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tplaceholder=\"Rent Per Day\"\n\t\t\t\t\t\tid=\"roomRentPerDay\"\n\t\t\t\t\t\tstyle={{ marginBottom: \"10px\", width: \"100%\" }}\n\t\t\t\t\t/>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tplaceholder=\"Phone Number\"\n\t\t\t\t\t\tid=\"roomPhoneNumber\"\n\t\t\t\t\t\tstyle={{ marginBottom: \"10px\", width: \"100%\" }}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t),\n\t\t\tokText: \"Update\",\n\t\t\tcancelText: \"Cancel\",\n\t\t\tonOk: () => {\n\t\t\t\tconst updatedRoomData = {\n\t\t\t\t\tname: document.getElementById(\"roomName\").value,\n\t\t\t\t\tmaxcount: document.getElementById(\"roomMaxCount\").value,\n\t\t\t\t\trentperday: document.getElementById(\"roomRentPerDay\").value,\n\t\t\t\t\tphonenumber: document.getElementById(\"roomPhoneNumber\").value,\n\t\t\t\t};\n\t\t\t\tupdateRoom(room, updatedRoomData);\n\t\t\t},\n\t\t});\n\t};\n\t\n\n\tconst deleteRoom = async (roomId) => {\n\t\tsetError(\"\");\n\t\tsetLoading(true);\n\t\ttry {\n\t\t\tawait axios.delete(`/api/rooms/delete/room/${roomId}`);\n\t\t\tfetchMyData(); // Refresh the room list after deletion\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t\tsetError(error.message);\n\t\t}\n\t\tsetLoading(false);\n\t};\n\n\tconst confirmDelete = (roomId) => {\n\t\tconsole.log(roomId);\n\t\tModal.confirm({\n\t\t\ttitle: \"Are you sure you want to delete this room?\",\n\t\t\tokText: \"Yes\",\n\t\t\tcancelText: \"No\",\n\t\t\tonOk: () => deleteRoom(roomId),\n\t\t});\n\t};\n\n\tconst columns = [\n\t\t{\n\t\t\ttitle: \"roomid\",\n\t\t\tdataIndex: \"_id\",\n\t\t\tkey: \"_id\",\n\t\t},\n\t\t{\n\t\t\ttitle: \"name\",\n\t\t\tdataIndex: \"name\",\n\t\t\tkey: \"name\",\n\t\t},\n\t\t{ title: \"maxcount\", dataIndex: \"maxcount\", key: \"maxcount\" },\n\t\t{ title: \"phonenumber\", dataIndex: \"phonenumber\", key: \"phonenumber\" },\n\t\t{ title: \"rentperday\", dataIndex: \"rentperday\", key: \"rentperday\" },\n\t\t{ title: \"type\", dataIndex: \"type\", key: \"type\" },\n\t\t{\n\t\t\ttitle: \"Actions\",\n\t\t\tdataIndex: \"actions\",\n\t\t\tkey: \"actions\",\n\t\t\trender: (text, record) => (\n\t\t\t\t<div style={{ display: \"flex\", alignItems: \"center\", gap: \"20px\" }}>\n\t\t\t\t\t<Button\n\t\t\t\t\t\ttype=\"link\"\n\t\t\t\t\t\tstyle={{ padding: 0, border: \"none\", color: \"#1890ff\" }}\n\t\t\t\t\t\t//onClick={() => console.log(`Update room with ID: ${record._id}`)}\n\t\t\t\t\t\tonClick={() => confirmUpdate(record)}\n\t\t\t\t\t>\n\t\t\t\t\t\tUpdate\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button\n\t\t\t\t\t\ttype=\"link\"\n\t\t\t\t\t\tstyle={{ padding: 0, border: \"none\", color: \"#ff4d4f\" }}\n\t\t\t\t\t\tonClick={() => confirmDelete(record._id)}\n\t\t\t\t\t>\n\t\t\t\t\t\tDelete\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t),\n\t\t},\n\t];\n\n\tasync function fetchMyData() {\n\t\tsetError(\"\");\n\t\tsetLoading(true);\n\t\ttry {\n\t\t\tconst data = (await axios.post(\"/api/rooms/getallrooms\")).data;\n\t\t\tsetRooms(data);\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t\tsetError(error);\n\t\t}\n\t\tsetLoading(false);\n\t}\n\n\tuseEffect(() => {\n\t\tfetchMyData();\n\t}, []);\n\n\treturn (\n\t\t<div className=\"row\">\n\t\t\t{loading ? (\n\t\t\t\t<Loader></Loader>\n\t\t\t) : error.length > 0 ? (\n\t\t\t\t<Error msg={error}></Error>\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<div className=\"col md-12\">\n\t\t\t\t\t\t<button className=\"btn btn-success\" onClick={fetchMyData}>\n\t\t\t\t\t\t\tRefresh\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-md-12\">\n\t\t\t\t\t\t<Table columns={columns} dataSource={rooms} />\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nexport default AdminRoomScreen;\n"]},"metadata":{},"sourceType":"module"}