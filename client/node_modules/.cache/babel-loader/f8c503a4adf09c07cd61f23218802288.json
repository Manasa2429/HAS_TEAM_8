{"ast":null,"code":"var _jsxFileName = \"/home/apiiit123/Documents/vscode/Team-8-main/client/src/screens/FoodMenuScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Card, Row, Col, Button, Modal, notification, Form, Input, Upload } from \"antd\";\nimport { UploadOutlined } from \"@ant-design/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FoodMenuScreen() {\n  _s();\n\n  const [foodItems, setFoodItems] = useState([]);\n  const [selectedFood, setSelectedFood] = useState(null);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [isAddModalVisible, setIsAddModalVisible] = useState(false);\n  const [isEditModalVisible, setIsEditModalVisible] = useState(false);\n  const [isDeleteModalVisible, setIsDeleteModalVisible] = useState(false);\n  useEffect(() => {\n    fetchFoodItems();\n  }, []);\n\n  const fetchFoodItems = () => {\n    const fetchedItems = [{\n      key: 1,\n      name: \"Pizza\",\n      price: 10,\n      description: \"Delicious cheese pizza\",\n      image: \"/path/to/pizza-image.jpg\"\n    }, {\n      key: 2,\n      name: \"Burger\",\n      price: 5,\n      description: \"Juicy beef burger\",\n      image: \"/path/to/burger-image.jpg\"\n    }, {\n      key: 3,\n      name: \"Pasta\",\n      price: 7,\n      description: \"Creamy Alfredo pasta\",\n      image: \"/path/to/pasta-image.jpg\"\n    }, {\n      key: 4,\n      name: \"Salad\",\n      price: 4,\n      description: \"Fresh garden salad\",\n      image: \"/path/to/salad-image.jpg\"\n    }];\n    setFoodItems(fetchedItems);\n  };\n\n  const handleViewDetails = food => {\n    setSelectedFood(food);\n    setIsModalVisible(true);\n  };\n\n  const handleAddToCart = () => {\n    notification.success({\n      message: \"Added to Cart\",\n      description: `${selectedFood.name} has been added to your cart.`\n    });\n    setIsModalVisible(false);\n  };\n\n  const handleAddFoodItem = values => {\n    var _values$image;\n\n    const newFoodItem = {\n      key: foodItems.length + 1,\n      name: values.name,\n      price: values.price,\n      description: values.description,\n      image: ((_values$image = values.image) === null || _values$image === void 0 ? void 0 : _values$image.url) || \"\" // Storing image URL if uploaded\n\n    };\n    setFoodItems([...foodItems, newFoodItem]);\n    setIsAddModalVisible(false);\n    notification.success({\n      message: \"Food Item Added\",\n      description: `${values.name} has been added to the menu.`\n    });\n  };\n\n  const handleEditFoodItem = values => {\n    const updatedItems = foodItems.map(item => {\n      var _values$image2;\n\n      return item.key === selectedFood.key ? { ...item,\n        name: values.name,\n        price: values.price,\n        description: values.description,\n        image: ((_values$image2 = values.image) === null || _values$image2 === void 0 ? void 0 : _values$image2.url) || item.image\n      } : item;\n    });\n    setFoodItems(updatedItems);\n    setIsEditModalVisible(false);\n    notification.success({\n      message: \"Food Item Updated\",\n      description: `${values.name} has been updated.`\n    });\n  };\n\n  const handleDeleteFoodItem = () => {\n    const updatedItems = foodItems.filter(item => item.key !== selectedFood.key);\n    setFoodItems(updatedItems);\n    setIsDeleteModalVisible(false);\n    notification.success({\n      message: \"Food Item Deleted\",\n      description: `${selectedFood.name} has been deleted from the menu.`\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ml-3 mt-3 mr-3 bs\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center\",\n      children: \"Food Menu\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3 text-right\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: () => setIsAddModalVisible(true),\n        children: \"Add Menu Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      gutter: [16, 16],\n      children: foodItems.map(food => /*#__PURE__*/_jsxDEV(Col, {\n        xs: 24,\n        sm: 12,\n        md: 8,\n        lg: 6,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          title: food.name,\n          bordered: true,\n          extra: `$${food.price}`,\n          actions: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            onClick: () => {\n              setSelectedFood(food);\n              setIsEditModalVisible(true);\n            },\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"danger\",\n            onClick: () => {\n              setSelectedFood(food);\n              setIsDeleteModalVisible(true);\n            },\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            onClick: () => handleViewDetails(food),\n            children: \"View Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this)],\n          children: [food.image && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: food.image,\n            alt: food.name,\n            style: {\n              width: '100%',\n              height: 'auto'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: food.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)\n      }, food.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: selectedFood === null || selectedFood === void 0 ? void 0 : selectedFood.name,\n      visible: isModalVisible,\n      onCancel: () => setIsModalVisible(false),\n      footer: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setIsModalVisible(false),\n        children: \"Cancel\"\n      }, \"cancel\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: handleAddToCart,\n        children: \"Add to Cart\"\n      }, \"add\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this)],\n      children: [(selectedFood === null || selectedFood === void 0 ? void 0 : selectedFood.image) && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: selectedFood.image,\n        alt: selectedFood === null || selectedFood === void 0 ? void 0 : selectedFood.name,\n        style: {\n          width: '100%',\n          height: 'auto'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Price:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 12\n        }, this), \" $\", selectedFood === null || selectedFood === void 0 ? void 0 : selectedFood.price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: selectedFood === null || selectedFood === void 0 ? void 0 : selectedFood.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Add New Food Item\",\n      visible: isAddModalVisible,\n      onCancel: () => setIsAddModalVisible(false),\n      footer: null,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        layout: \"vertical\",\n        onFinish: handleAddFoodItem,\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Name\",\n          name: \"name\",\n          rules: [{\n            required: true,\n            message: \"Please enter the food name\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Enter food name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Price\",\n          name: \"price\",\n          rules: [{\n            required: true,\n            message: \"Please enter the price\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            type: \"number\",\n            placeholder: \"Enter price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Description\",\n          name: \"description\",\n          rules: [{\n            required: true,\n            message: \"Please enter a description\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Enter description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Image\",\n          name: \"image\",\n          valuePropName: \"fileList\",\n          getValueFromEvent: e => e ? e.fileList : [],\n          children: /*#__PURE__*/_jsxDEV(Upload, {\n            name: \"image\",\n            listType: \"picture-card\",\n            showUploadList: false,\n            beforeUpload: () => false // Prevent auto upload, we are handling the image locally\n            ,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              icon: /*#__PURE__*/_jsxDEV(UploadOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 29\n              }, this),\n              children: \"Upload Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            children: \"Add Food Item\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Edit Food Item\",\n      visible: isEditModalVisible,\n      onCancel: () => setIsEditModalVisible(false),\n      footer: null,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        layout: \"vertical\",\n        initialValues: selectedFood,\n        onFinish: handleEditFoodItem,\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Name\",\n          name: \"name\",\n          rules: [{\n            required: true,\n            message: \"Please enter the food name\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Enter food name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Price\",\n          name: \"price\",\n          rules: [{\n            required: true,\n            message: \"Please enter the price\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            type: \"number\",\n            placeholder: \"Enter price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Description\",\n          name: \"description\",\n          rules: [{\n            required: true,\n            message: \"Please enter a description\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Enter description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Image\",\n          name: \"image\",\n          valuePropName: \"fileList\",\n          getValueFromEvent: e => e ? e.fileList : [],\n          children: /*#__PURE__*/_jsxDEV(Upload, {\n            name: \"image\",\n            listType: \"picture-card\",\n            showUploadList: false,\n            beforeUpload: () => false // Prevent auto upload, we are handling the image locally\n            ,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              icon: /*#__PURE__*/_jsxDEV(UploadOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 29\n              }, this),\n              children: \"Upload Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            children: \"Update Food Item\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Delete Food Item\",\n      visible: isDeleteModalVisible,\n      onCancel: () => setIsDeleteModalVisible(false),\n      footer: null,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Are you sure you want to delete \", selectedFood === null || selectedFood === void 0 ? void 0 : selectedFood.name, \"?\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"danger\",\n        onClick: handleDeleteFoodItem,\n        children: \"Yes, Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setIsDeleteModalVisible(false),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FoodMenuScreen, \"eNix0RfvC9OtVCxtAnd7vpUwdTY=\");\n\n_c = FoodMenuScreen;\nexport default FoodMenuScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"FoodMenuScreen\");","map":{"version":3,"sources":["/home/apiiit123/Documents/vscode/Team-8-main/client/src/screens/FoodMenuScreen.js"],"names":["React","useState","useEffect","Card","Row","Col","Button","Modal","notification","Form","Input","Upload","UploadOutlined","FoodMenuScreen","foodItems","setFoodItems","selectedFood","setSelectedFood","isModalVisible","setIsModalVisible","isAddModalVisible","setIsAddModalVisible","isEditModalVisible","setIsEditModalVisible","isDeleteModalVisible","setIsDeleteModalVisible","fetchFoodItems","fetchedItems","key","name","price","description","image","handleViewDetails","food","handleAddToCart","success","message","handleAddFoodItem","values","newFoodItem","length","url","handleEditFoodItem","updatedItems","map","item","handleDeleteFoodItem","filter","width","height","required","e","fileList"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Card, Row, Col, Button, Modal, notification, Form, Input, Upload } from \"antd\";\nimport { UploadOutlined } from \"@ant-design/icons\";\n\nfunction FoodMenuScreen() {\n  const [foodItems, setFoodItems] = useState([]);\n  const [selectedFood, setSelectedFood] = useState(null);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [isAddModalVisible, setIsAddModalVisible] = useState(false);\n  const [isEditModalVisible, setIsEditModalVisible] = useState(false);\n  const [isDeleteModalVisible, setIsDeleteModalVisible] = useState(false);\n\n  useEffect(() => {\n    fetchFoodItems();\n  }, []);\n\n  const fetchFoodItems = () => {\n    const fetchedItems = [\n      { key: 1, name: \"Pizza\", price: 10, description: \"Delicious cheese pizza\", image: \"/path/to/pizza-image.jpg\" },\n      { key: 2, name: \"Burger\", price: 5, description: \"Juicy beef burger\", image: \"/path/to/burger-image.jpg\" },\n      { key: 3, name: \"Pasta\", price: 7, description: \"Creamy Alfredo pasta\", image: \"/path/to/pasta-image.jpg\" },\n      { key: 4, name: \"Salad\", price: 4, description: \"Fresh garden salad\", image: \"/path/to/salad-image.jpg\" },\n    ];\n    setFoodItems(fetchedItems);\n  };\n\n  const handleViewDetails = (food) => {\n    setSelectedFood(food);\n    setIsModalVisible(true);\n  };\n\n  const handleAddToCart = () => {\n    notification.success({\n      message: \"Added to Cart\",\n      description: `${selectedFood.name} has been added to your cart.`,\n    });\n    setIsModalVisible(false);\n  };\n\n  const handleAddFoodItem = (values) => {\n    const newFoodItem = {\n      key: foodItems.length + 1,\n      name: values.name,\n      price: values.price,\n      description: values.description,\n      image: values.image?.url || \"\", // Storing image URL if uploaded\n    };\n    setFoodItems([...foodItems, newFoodItem]);\n    setIsAddModalVisible(false);\n    notification.success({\n      message: \"Food Item Added\",\n      description: `${values.name} has been added to the menu.`,\n    });\n  };\n\n  const handleEditFoodItem = (values) => {\n    const updatedItems = foodItems.map((item) =>\n      item.key === selectedFood.key\n        ? { ...item, name: values.name, price: values.price, description: values.description, image: values.image?.url || item.image }\n        : item\n    );\n    setFoodItems(updatedItems);\n    setIsEditModalVisible(false);\n    notification.success({\n      message: \"Food Item Updated\",\n      description: `${values.name} has been updated.`,\n    });\n  };\n\n  const handleDeleteFoodItem = () => {\n    const updatedItems = foodItems.filter((item) => item.key !== selectedFood.key);\n    setFoodItems(updatedItems);\n    setIsDeleteModalVisible(false);\n    notification.success({\n      message: \"Food Item Deleted\",\n      description: `${selectedFood.name} has been deleted from the menu.`,\n    });\n  };\n\n  return (\n    <div className=\"ml-3 mt-3 mr-3 bs\">\n      <h1 className=\"text-center\">Food Menu</h1>\n      <div className=\"mb-3 text-right\">\n        <Button type=\"primary\" onClick={() => setIsAddModalVisible(true)}>\n          Add Menu Item\n        </Button>\n      </div>\n      <Row gutter={[16, 16]}>\n        {foodItems.map((food) => (\n          <Col key={food.key} xs={24} sm={12} md={8} lg={6}>\n            <Card\n              title={food.name}\n              bordered={true}\n              extra={`$${food.price}`}\n              actions={[\n                <Button type=\"primary\" onClick={() => { setSelectedFood(food); setIsEditModalVisible(true); }}>\n                  Edit\n                </Button>,\n                <Button type=\"danger\" onClick={() => { setSelectedFood(food); setIsDeleteModalVisible(true); }}>\n                  Delete\n                </Button>,\n                <Button type=\"primary\" onClick={() => handleViewDetails(food)}>\n                  View Details\n                </Button>,\n              ]}\n            >\n              {food.image && <img src={food.image} alt={food.name} style={{ width: '100%', height: 'auto' }} />}\n              <p>{food.description}</p>\n            </Card>\n          </Col>\n        ))}\n      </Row>\n\n      {/* View Food Details Modal */}\n      <Modal\n        title={selectedFood?.name}\n        visible={isModalVisible}\n        onCancel={() => setIsModalVisible(false)}\n        footer={[\n          <Button key=\"cancel\" onClick={() => setIsModalVisible(false)}>\n            Cancel\n          </Button>,\n          <Button key=\"add\" type=\"primary\" onClick={handleAddToCart}>\n            Add to Cart\n          </Button>,\n        ]}\n      >\n        {selectedFood?.image && <img src={selectedFood.image} alt={selectedFood?.name} style={{ width: '100%', height: 'auto' }} />}\n        <p><strong>Price:</strong> ${selectedFood?.price}</p>\n        <p>{selectedFood?.description}</p>\n      </Modal>\n\n      {/* Add New Food Item Modal */}\n      <Modal\n        title=\"Add New Food Item\"\n        visible={isAddModalVisible}\n        onCancel={() => setIsAddModalVisible(false)}\n        footer={null}\n      >\n        <Form layout=\"vertical\" onFinish={handleAddFoodItem}>\n          <Form.Item\n            label=\"Name\"\n            name=\"name\"\n            rules={[{ required: true, message: \"Please enter the food name\" }]}\n          >\n            <Input placeholder=\"Enter food name\" />\n          </Form.Item>\n          <Form.Item\n            label=\"Price\"\n            name=\"price\"\n            rules={[{ required: true, message: \"Please enter the price\" }]}\n          >\n            <Input type=\"number\" placeholder=\"Enter price\" />\n          </Form.Item>\n          <Form.Item\n            label=\"Description\"\n            name=\"description\"\n            rules={[{ required: true, message: \"Please enter a description\" }]}\n          >\n            <Input placeholder=\"Enter description\" />\n          </Form.Item>\n          <Form.Item\n            label=\"Image\"\n            name=\"image\"\n            valuePropName=\"fileList\"\n            getValueFromEvent={(e) => (e ? e.fileList : [])}\n          >\n            <Upload\n              name=\"image\"\n              listType=\"picture-card\"\n              showUploadList={false}\n              beforeUpload={() => false} // Prevent auto upload, we are handling the image locally\n            >\n              <Button icon={<UploadOutlined />}>Upload Image</Button>\n            </Upload>\n          </Form.Item>\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Add Food Item\n            </Button>\n          </Form.Item>\n        </Form>\n      </Modal>\n\n      {/* Edit Food Item Modal */}\n      <Modal\n        title=\"Edit Food Item\"\n        visible={isEditModalVisible}\n        onCancel={() => setIsEditModalVisible(false)}\n        footer={null}\n      >\n        <Form layout=\"vertical\" initialValues={selectedFood} onFinish={handleEditFoodItem}>\n          <Form.Item\n            label=\"Name\"\n            name=\"name\"\n            rules={[{ required: true, message: \"Please enter the food name\" }]}\n          >\n            <Input placeholder=\"Enter food name\" />\n          </Form.Item>\n          <Form.Item\n            label=\"Price\"\n            name=\"price\"\n            rules={[{ required: true, message: \"Please enter the price\" }]}\n          >\n            <Input type=\"number\" placeholder=\"Enter price\" />\n          </Form.Item>\n          <Form.Item\n            label=\"Description\"\n            name=\"description\"\n            rules={[{ required: true, message: \"Please enter a description\" }]}\n          >\n            <Input placeholder=\"Enter description\" />\n          </Form.Item>\n          <Form.Item\n            label=\"Image\"\n            name=\"image\"\n            valuePropName=\"fileList\"\n            getValueFromEvent={(e) => (e ? e.fileList : [])}\n          >\n            <Upload\n              name=\"image\"\n              listType=\"picture-card\"\n              showUploadList={false}\n              beforeUpload={() => false} // Prevent auto upload, we are handling the image locally\n            >\n              <Button icon={<UploadOutlined />}>Upload Image</Button>\n            </Upload>\n          </Form.Item>\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Update Food Item\n            </Button>\n          </Form.Item>\n        </Form>\n      </Modal>\n\n      {/* Delete Food Item Modal */}\n      <Modal\n        title=\"Delete Food Item\"\n        visible={isDeleteModalVisible}\n        onCancel={() => setIsDeleteModalVisible(false)}\n        footer={null}\n      >\n        <p>Are you sure you want to delete {selectedFood?.name}?</p>\n        <Button type=\"danger\" onClick={handleDeleteFoodItem}>\n          Yes, Delete\n        </Button>\n        <Button onClick={() => setIsDeleteModalVisible(false)}>\n          Cancel\n        </Button>\n      </Modal>\n    </div>\n  );\n}\n\nexport default FoodMenuScreen;\n"]},"metadata":{},"sourceType":"module"}