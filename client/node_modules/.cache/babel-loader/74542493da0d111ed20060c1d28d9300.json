{"ast":null,"code":"var _jsxFileName = \"/home/apiiit123/Documents/vscode/Team-8-main/client/src/screens/FoodMenuScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Card, Row, Col, Button, Modal, notification, Form, Input } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FoodMenuScreen() {\n  _s();\n\n  const [foodItems, setFoodItems] = useState([]);\n  const [selectedFood, setSelectedFood] = useState(null);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [isAddModalVisible, setIsAddModalVisible] = useState(false);\n  useEffect(() => {\n    fetchFoodItems();\n  }, []);\n\n  const fetchFoodItems = () => {\n    // Simulated API call to fetch food items\n    const fetchedItems = [{\n      key: 1,\n      name: \"Pizza\",\n      price: 10,\n      description: \"Delicious cheese pizza\"\n    }, {\n      key: 2,\n      name: \"Burger\",\n      price: 5,\n      description: \"Juicy beef burger\"\n    }, {\n      key: 3,\n      name: \"Pasta\",\n      price: 7,\n      description: \"Creamy Alfredo pasta\"\n    }, {\n      key: 4,\n      name: \"Salad\",\n      price: 4,\n      description: \"Fresh garden salad\"\n    }];\n    setFoodItems(fetchedItems);\n  };\n\n  const handleViewDetails = food => {\n    setSelectedFood(food);\n    setIsModalVisible(true);\n  };\n\n  const handleAddToCart = () => {\n    notification.success({\n      message: \"Added to Cart\",\n      description: `${selectedFood.name} has been added to your cart.`\n    });\n    setIsModalVisible(false);\n  };\n\n  const handleAddFoodItem = values => {\n    const newFoodItem = {\n      key: foodItems.length + 1,\n      name: values.name,\n      price: values.price,\n      description: values.description\n    };\n    setFoodItems([...foodItems, newFoodItem]);\n    setIsAddModalVisible(false);\n    notification.success({\n      message: \"Food Item Added\",\n      description: `${values.name} has been added to the menu.`\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ml-3 mt-3 mr-3 bs\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center\",\n      children: \"Food Menu\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3 text-right\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: () => setIsAddModalVisible(true),\n        children: \"Add Menu Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      gutter: [16, 16],\n      children: foodItems.map(food => /*#__PURE__*/_jsxDEV(Col, {\n        xs: 24,\n        sm: 12,\n        md: 8,\n        lg: 6,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          title: food.name,\n          bordered: true,\n          extra: `$${food.price}`,\n          actions: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            onClick: () => handleViewDetails(food),\n            children: \"View Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this)],\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: food.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)\n      }, food.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: selectedFood === null || selectedFood === void 0 ? void 0 : selectedFood.name,\n      visible: isModalVisible,\n      onCancel: () => setIsModalVisible(false),\n      footer: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setIsModalVisible(false),\n        children: \"Cancel\"\n      }, \"cancel\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: handleAddToCart,\n        children: \"Add to Cart\"\n      }, \"add\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)],\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Price:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 12\n        }, this), \" $\", selectedFood === null || selectedFood === void 0 ? void 0 : selectedFood.price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: selectedFood === null || selectedFood === void 0 ? void 0 : selectedFood.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Add New Food Item\",\n      visible: isAddModalVisible,\n      onCancel: () => setIsAddModalVisible(false),\n      footer: null,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        layout: \"vertical\",\n        onFinish: handleAddFoodItem,\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Name\",\n          name: \"name\",\n          rules: [{\n            required: true,\n            message: \"Please enter the food name\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Enter food name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Price\",\n          name: \"price\",\n          rules: [{\n            required: true,\n            message: \"Please enter the price\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            type: \"number\",\n            placeholder: \"Enter price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Description\",\n          name: \"description\",\n          rules: [{\n            required: true,\n            message: \"Please enter a description\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Enter description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            children: \"Add Food Item\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FoodMenuScreen, \"EGdxhnu9DHpZaDur7JgVGvFWe4Q=\");\n\n_c = FoodMenuScreen;\nexport default FoodMenuScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"FoodMenuScreen\");","map":{"version":3,"sources":["/home/apiiit123/Documents/vscode/Team-8-main/client/src/screens/FoodMenuScreen.js"],"names":["React","useState","useEffect","Card","Row","Col","Button","Modal","notification","Form","Input","FoodMenuScreen","foodItems","setFoodItems","selectedFood","setSelectedFood","isModalVisible","setIsModalVisible","isAddModalVisible","setIsAddModalVisible","fetchFoodItems","fetchedItems","key","name","price","description","handleViewDetails","food","handleAddToCart","success","message","handleAddFoodItem","values","newFoodItem","length","map","required"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Card, Row, Col, Button, Modal, notification, Form, Input } from \"antd\";\n\nfunction FoodMenuScreen() {\n  const [foodItems, setFoodItems] = useState([]);\n  const [selectedFood, setSelectedFood] = useState(null);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [isAddModalVisible, setIsAddModalVisible] = useState(false);\n\n  useEffect(() => {\n    fetchFoodItems();\n  }, []);\n\n  const fetchFoodItems = () => {\n    // Simulated API call to fetch food items\n    const fetchedItems = [\n      { key: 1, name: \"Pizza\", price: 10, description: \"Delicious cheese pizza\" },\n      { key: 2, name: \"Burger\", price: 5, description: \"Juicy beef burger\" },\n      { key: 3, name: \"Pasta\", price: 7, description: \"Creamy Alfredo pasta\" },\n      { key: 4, name: \"Salad\", price: 4, description: \"Fresh garden salad\" },\n    ];\n    setFoodItems(fetchedItems);\n  };\n\n  const handleViewDetails = (food) => {\n    setSelectedFood(food);\n    setIsModalVisible(true);\n  };\n\n  const handleAddToCart = () => {\n    notification.success({\n      message: \"Added to Cart\",\n      description: `${selectedFood.name} has been added to your cart.`,\n    });\n    setIsModalVisible(false);\n  };\n\n  const handleAddFoodItem = (values) => {\n    const newFoodItem = {\n      key: foodItems.length + 1,\n      name: values.name,\n      price: values.price,\n      description: values.description,\n    };\n    setFoodItems([...foodItems, newFoodItem]);\n    setIsAddModalVisible(false);\n    notification.success({\n      message: \"Food Item Added\",\n      description: `${values.name} has been added to the menu.`,\n    });\n  };\n\n  return (\n    <div className=\"ml-3 mt-3 mr-3 bs\">\n      <h1 className=\"text-center\">Food Menu</h1>\n      <div className=\"mb-3 text-right\">\n        <Button type=\"primary\" onClick={() => setIsAddModalVisible(true)}>\n          Add Menu Item\n        </Button>\n      </div>\n      <Row gutter={[16, 16]}>\n        {foodItems.map((food) => (\n          <Col key={food.key} xs={24} sm={12} md={8} lg={6}>\n            <Card\n              title={food.name}\n              bordered={true}\n              extra={`$${food.price}`}\n              actions={[\n                <Button type=\"primary\" onClick={() => handleViewDetails(food)}>\n                  View Details\n                </Button>,\n              ]}\n            >\n              <p>{food.description}</p>\n            </Card>\n          </Col>\n        ))}\n      </Row>\n\n      <Modal\n        title={selectedFood?.name}\n        visible={isModalVisible}\n        onCancel={() => setIsModalVisible(false)}\n        footer={[\n          <Button key=\"cancel\" onClick={() => setIsModalVisible(false)}>\n            Cancel\n          </Button>,\n          <Button key=\"add\" type=\"primary\" onClick={handleAddToCart}>\n            Add to Cart\n          </Button>,\n        ]}\n      >\n        <p><strong>Price:</strong> ${selectedFood?.price}</p>\n        <p>{selectedFood?.description}</p>\n      </Modal>\n\n      <Modal\n        title=\"Add New Food Item\"\n        visible={isAddModalVisible}\n        onCancel={() => setIsAddModalVisible(false)}\n        footer={null}\n      >\n        <Form layout=\"vertical\" onFinish={handleAddFoodItem}>\n          <Form.Item\n            label=\"Name\"\n            name=\"name\"\n            rules={[{ required: true, message: \"Please enter the food name\" }]}\n          >\n            <Input placeholder=\"Enter food name\" />\n          </Form.Item>\n          <Form.Item\n            label=\"Price\"\n            name=\"price\"\n            rules={[{ required: true, message: \"Please enter the price\" }]}\n          >\n            <Input type=\"number\" placeholder=\"Enter price\" />\n          </Form.Item>\n          <Form.Item\n            label=\"Description\"\n            name=\"description\"\n            rules={[{ required: true, message: \"Please enter a description\" }]}\n          >\n            <Input placeholder=\"Enter description\" />\n          </Form.Item>\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Add Food Item\n            </Button>\n          </Form.Item>\n        </Form>\n      </Modal>\n    </div>\n  );\n}\n\nexport default FoodMenuScreen;\n"]},"metadata":{},"sourceType":"module"}