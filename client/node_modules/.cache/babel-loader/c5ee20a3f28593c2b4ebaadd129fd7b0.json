{"ast":null,"code":"var _jsxFileName = \"/home/apiiit123/Documents/vscode/Team-8-main/client/src/screens/FoodUserScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { List, Card, Button, notification, Row, Col } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FoodUserScreen() {\n  _s();\n\n  const [foodItems, setFoodItems] = useState([]);\n  const [cart, setCart] = useState([]);\n  useEffect(() => {\n    fetchFoodItems();\n  }, []);\n\n  const fetchFoodItems = () => {\n    // Simulated API call to fetch food items\n    const fetchedItems = [{\n      key: 1,\n      name: \"Pizza\",\n      price: 10,\n      description: \"Delicious cheese pizza\"\n    }, {\n      key: 2,\n      name: \"Burger\",\n      price: 5,\n      description: \"Juicy beef burger\"\n    }, {\n      key: 3,\n      name: \"Pasta\",\n      price: 7,\n      description: \"Creamy Alfredo pasta\"\n    }, {\n      key: 4,\n      name: \"Salad\",\n      price: 4,\n      description: \"Fresh garden salad\"\n    }];\n    setFoodItems(fetchedItems);\n  };\n\n  const addToCart = item => {\n    setCart([...cart, item]);\n    notification.success({\n      message: \"Added to Cart\",\n      description: `${item.name} has been added to your cart.`\n    });\n  };\n\n  const removeFromCart = itemKey => {\n    setCart(cart.filter(item => item.key !== itemKey));\n    notification.info({\n      message: \"Removed from Cart\",\n      description: \"Item has been removed from your cart.\"\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ml-3 mt-3 mr-3 bs\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center\",\n      children: \"Food User Screen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      gutter: [16, 16],\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        span: 16,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Menu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          gutter: [16, 16],\n          children: foodItems.map(food => /*#__PURE__*/_jsxDEV(Col, {\n            xs: 24,\n            sm: 12,\n            md: 8,\n            lg: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              title: food.name,\n              bordered: true,\n              extra: `$${food.price}`,\n              actions: [/*#__PURE__*/_jsxDEV(Button, {\n                type: \"primary\",\n                onClick: () => addToCart(food),\n                children: \"Add to Cart\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 21\n              }, this)],\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: food.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this)\n          }, food.key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 8,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          bordered: true,\n          dataSource: cart,\n          renderItem: item => /*#__PURE__*/_jsxDEV(List.Item, {\n            actions: [/*#__PURE__*/_jsxDEV(Button, {\n              type: \"link\",\n              onClick: () => removeFromCart(item.key),\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 19\n            }, this)],\n            children: /*#__PURE__*/_jsxDEV(List.Item.Meta, {\n              title: item.name,\n              description: `Price: $${item.price}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Total: $\", cart.reduce((total, item) => total + item.price, 0)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FoodUserScreen, \"B6aSkV0JFze8Q2w1rHrQ9t3YKtY=\");\n\n_c = FoodUserScreen;\nexport default FoodUserScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"FoodUserScreen\");","map":{"version":3,"sources":["/home/apiiit123/Documents/vscode/Team-8-main/client/src/screens/FoodUserScreen.js"],"names":["React","useState","useEffect","List","Card","Button","notification","Row","Col","FoodUserScreen","foodItems","setFoodItems","cart","setCart","fetchFoodItems","fetchedItems","key","name","price","description","addToCart","item","success","message","removeFromCart","itemKey","filter","info","map","food","reduce","total"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { List, Card, Button, notification, Row, Col } from \"antd\";\n\nfunction FoodUserScreen() {\n  const [foodItems, setFoodItems] = useState([]);\n  const [cart, setCart] = useState([]);\n\n  useEffect(() => {\n    fetchFoodItems();\n  }, []);\n\n  const fetchFoodItems = () => {\n    // Simulated API call to fetch food items\n    const fetchedItems = [\n      { key: 1, name: \"Pizza\", price: 10, description: \"Delicious cheese pizza\" },\n      { key: 2, name: \"Burger\", price: 5, description: \"Juicy beef burger\" },\n      { key: 3, name: \"Pasta\", price: 7, description: \"Creamy Alfredo pasta\" },\n      { key: 4, name: \"Salad\", price: 4, description: \"Fresh garden salad\" },\n    ];\n    setFoodItems(fetchedItems);\n  };\n\n  const addToCart = (item) => {\n    setCart([...cart, item]);\n    notification.success({\n      message: \"Added to Cart\",\n      description: `${item.name} has been added to your cart.`,\n    });\n  };\n\n  const removeFromCart = (itemKey) => {\n    setCart(cart.filter((item) => item.key !== itemKey));\n    notification.info({\n      message: \"Removed from Cart\",\n      description: \"Item has been removed from your cart.\",\n    });\n  };\n\n  return (\n    <div className=\"ml-3 mt-3 mr-3 bs\">\n      <h1 className=\"text-center\">Food User Screen</h1>\n      <Row gutter={[16, 16]}>\n        <Col span={16}>\n          <h2>Menu</h2>\n          <Row gutter={[16, 16]}>\n            {foodItems.map((food) => (\n              <Col key={food.key} xs={24} sm={12} md={8} lg={6}>\n                <Card\n                  title={food.name}\n                  bordered={true}\n                  extra={`$${food.price}`}\n                  actions={[\n                    <Button type=\"primary\" onClick={() => addToCart(food)}>\n                      Add to Cart\n                    </Button>,\n                  ]}\n                >\n                  <p>{food.description}</p>\n                </Card>\n              </Col>\n            ))}\n          </Row>\n        </Col>\n        <Col span={8}>\n          <h2>Cart</h2>\n          <List\n            bordered\n            dataSource={cart}\n            renderItem={(item) => (\n              <List.Item\n                actions={[\n                  <Button type=\"link\" onClick={() => removeFromCart(item.key)}>\n                    Remove\n                  </Button>,\n                ]}\n              >\n                <List.Item.Meta\n                  title={item.name}\n                  description={`Price: $${item.price}`}\n                />\n              </List.Item>\n            )}\n          />\n          <div className=\"mt-3\">\n            <h3>Total: ${cart.reduce((total, item) => total + item.price, 0)}</h3>\n          </div>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default FoodUserScreen;\n"]},"metadata":{},"sourceType":"module"}