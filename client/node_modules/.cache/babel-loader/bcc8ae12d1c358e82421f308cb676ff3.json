{"ast":null,"code":"var _jsxFileName = \"/home/apiiit123/Documents/vscode/Team-8-main/client/src/screens/AdminRoomScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Table, Button, Modal } from \"antd\";\nimport Loader from \"../components/Loader\";\nimport Error from \"../components/Error\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction AdminRoomScreen() {\n  _s();\n\n  const [rooms, setRooms] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [room, setRoom] = useState(null);\n  const [inpObj, setInpObj] = useState({\n    roomname: \"\",\n    roommaxcount: \"\",\n    roomrentperDay: \"\",\n    roomphonenumber: \"\"\n  });\n\n  const handleChange = e => {\n    const {\n      id,\n      value\n    } = e.target;\n    setInpObj(prev => ({ ...prev,\n      [id]: value\n    }));\n  };\n\n  const updateRoom = async (room, updatedRoomData) => {\n    const roomId = room._id;\n\n    try {\n      const response = await axios.put(`/api/rooms/update/room/${roomId}`, updatedRoomData);\n      console.log(\"Update Success:\", response.data);\n      fetchMyData(); // Refresh rooms\n    } catch (error) {\n      console.error(\"Error updating room:\", error.message);\n      setError(error.message);\n    }\n  };\n\n  const confirmUpdate = room => {\n    // Set the selected room's data into the inpObj state\n    setInpObj({\n      roomname: room.name,\n      roommaxcount: room.maxcount,\n      roomrentperDay: room.rentperday,\n      roomphonenumber: room.phonenumber\n    });\n    Modal.confirm({\n      title: \"Are you sure you want to update this room?\",\n      content: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please confirm the updated details for the room:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Name\",\n          id: \"roomname\",\n          style: {\n            marginBottom: \"10px\",\n            width: \"100%\"\n          },\n          value: inpObj.roomname,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"Max Count\",\n          id: \"roommaxcount\",\n          style: {\n            marginBottom: \"10px\",\n            width: \"100%\"\n          },\n          value: inpObj.roommaxcount,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"Rent Per Day\",\n          id: \"roomrentperDay\",\n          style: {\n            marginBottom: \"10px\",\n            width: \"100%\"\n          },\n          value: inpObj.roomrentperDay,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Phone Number\",\n          id: \"roomphonenumber\",\n          style: {\n            marginBottom: \"10px\",\n            width: \"100%\"\n          },\n          value: inpObj.roomphonenumber,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this),\n      okText: \"Update\",\n      cancelText: \"Cancel\",\n      onOk: () => {\n        const updatedRoomData = {\n          name: inpObj.roomname,\n          maxcount: inpObj.roommaxcount,\n          rentperday: inpObj.roomrentperDay,\n          phonenumber: inpObj.roomphonenumber\n        };\n        updateRoom(room, updatedRoomData);\n      }\n    });\n  };\n\n  const deleteRoom = async roomId => {\n    setError(\"\");\n    setLoading(true);\n\n    try {\n      await axios.delete(`/api/rooms/delete/room/${roomId}`);\n      fetchMyData(); // Refresh the room list after deletion\n    } catch (error) {\n      console.log(error);\n      setError(error.message);\n    }\n\n    setLoading(false);\n  };\n\n  const confirmDelete = roomId => {\n    Modal.confirm({\n      title: \"Are you sure you want to delete this room?\",\n      okText: \"Yes\",\n      cancelText: \"No\",\n      onOk: () => deleteRoom(roomId)\n    });\n  };\n\n  const columns = [{\n    title: \"roomid\",\n    dataIndex: \"_id\",\n    key: \"_id\"\n  }, {\n    title: \"name\",\n    dataIndex: \"name\",\n    key: \"name\"\n  }, {\n    title: \"maxcount\",\n    dataIndex: \"maxcount\",\n    key: \"maxcount\"\n  }, {\n    title: \"phonenumber\",\n    dataIndex: \"phonenumber\",\n    key: \"phonenumber\"\n  }, {\n    title: \"rentperday\",\n    dataIndex: \"rentperday\",\n    key: \"rentperday\"\n  }, {\n    title: \"type\",\n    dataIndex: \"type\",\n    key: \"type\"\n  }, {\n    title: \"Actions\",\n    dataIndex: \"actions\",\n    key: \"actions\",\n    render: (text, record) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        alignItems: \"center\",\n        gap: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"link\",\n        style: {\n          padding: 0,\n          border: \"none\",\n          color: \"#1890ff\"\n        },\n        onClick: () => confirmUpdate(record),\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"link\",\n        style: {\n          padding: 0,\n          border: \"none\",\n          color: \"#ff4d4f\"\n        },\n        onClick: () => confirmDelete(record._id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }, this)\n  }];\n\n  async function fetchMyData() {\n    setError(\"\");\n    setLoading(true);\n\n    try {\n      const data = (await axios.post(\"/api/rooms/getallrooms\")).data;\n      setRooms(data);\n    } catch (error) {\n      console.log(error);\n      setError(error);\n    }\n\n    setLoading(false);\n  }\n\n  useEffect(() => {\n    fetchMyData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }, this) : error.length > 0 ? /*#__PURE__*/_jsxDEV(Error, {\n      msg: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col md-12\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success\",\n          onClick: fetchMyData,\n          children: \"Refresh\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12\",\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          columns: columns,\n          dataSource: rooms\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AdminRoomScreen, \"b/PSpY8xKVTvtLmz0cpjG5h5exI=\");\n\n_c = AdminRoomScreen;\nexport default AdminRoomScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminRoomScreen\");","map":{"version":3,"sources":["/home/apiiit123/Documents/vscode/Team-8-main/client/src/screens/AdminRoomScreen.js"],"names":["React","useState","useEffect","axios","Table","Button","Modal","Loader","Error","AdminRoomScreen","rooms","setRooms","loading","setLoading","error","setError","room","setRoom","inpObj","setInpObj","roomname","roommaxcount","roomrentperDay","roomphonenumber","handleChange","e","id","value","target","prev","updateRoom","updatedRoomData","roomId","_id","response","put","console","log","data","fetchMyData","message","confirmUpdate","name","maxcount","rentperday","phonenumber","confirm","title","content","marginBottom","width","okText","cancelText","onOk","deleteRoom","delete","confirmDelete","columns","dataIndex","key","render","text","record","display","alignItems","gap","padding","border","color","post","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Table, Button, Modal } from \"antd\";\n\nimport Loader from \"../components/Loader\";\nimport Error from \"../components/Error\";\n\nfunction AdminRoomScreen() {\n  const [rooms, setRooms] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [room, setRoom] = useState(null);\n  const [inpObj, setInpObj] = useState({\n    roomname: \"\",\n    roommaxcount: \"\",\n    roomrentperDay: \"\",\n    roomphonenumber: \"\",\n  });\n\n  const handleChange = (e) => {\n    const { id, value } = e.target;\n    setInpObj((prev) => ({\n      ...prev,\n      [id]: value,\n    }));\n  };\n\n  const updateRoom = async (room, updatedRoomData) => {\n    const roomId = room._id;\n    try {\n      const response = await axios.put(`/api/rooms/update/room/${roomId}`, updatedRoomData);\n      console.log(\"Update Success:\", response.data);\n      fetchMyData(); // Refresh rooms\n    } catch (error) {\n      console.error(\"Error updating room:\", error.message);\n      setError(error.message);\n    }\n  };\n\n  const confirmUpdate = (room) => {\n    // Set the selected room's data into the inpObj state\n    setInpObj({\n      roomname: room.name,\n      roommaxcount: room.maxcount,\n      roomrentperDay: room.rentperday,\n      roomphonenumber: room.phonenumber,\n    });\n\n    Modal.confirm({\n      title: \"Are you sure you want to update this room?\",\n      content: (\n        <div>\n          <p>Please confirm the updated details for the room:</p>\n          <input\n            type=\"text\"\n            placeholder=\"Name\"\n            id=\"roomname\"\n            style={{ marginBottom: \"10px\", width: \"100%\" }}\n            value={inpObj.roomname}\n            onChange={handleChange}\n          />\n          <input\n            type=\"number\"\n            placeholder=\"Max Count\"\n            id=\"roommaxcount\"\n            style={{ marginBottom: \"10px\", width: \"100%\" }}\n            value={inpObj.roommaxcount}\n            onChange={handleChange}\n          />\n          <input\n            type=\"number\"\n            placeholder=\"Rent Per Day\"\n            id=\"roomrentperDay\"\n            style={{ marginBottom: \"10px\", width: \"100%\" }}\n            value={inpObj.roomrentperDay}\n            onChange={handleChange}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Phone Number\"\n            id=\"roomphonenumber\"\n            style={{ marginBottom: \"10px\", width: \"100%\" }}\n            value={inpObj.roomphonenumber}\n            onChange={handleChange}\n          />\n        </div>\n      ),\n      okText: \"Update\",\n      cancelText: \"Cancel\",\n      onOk: () => {\n        const updatedRoomData = {\n          name: inpObj.roomname,\n          maxcount: inpObj.roommaxcount,\n          rentperday: inpObj.roomrentperDay,\n          phonenumber: inpObj.roomphonenumber,\n        };\n        updateRoom(room, updatedRoomData);\n      },\n    });\n  };\n\n  const deleteRoom = async (roomId) => {\n    setError(\"\");\n    setLoading(true);\n    try {\n      await axios.delete(`/api/rooms/delete/room/${roomId}`);\n      fetchMyData(); // Refresh the room list after deletion\n    } catch (error) {\n      console.log(error);\n      setError(error.message);\n    }\n    setLoading(false);\n  };\n\n  const confirmDelete = (roomId) => {\n    Modal.confirm({\n      title: \"Are you sure you want to delete this room?\",\n      okText: \"Yes\",\n      cancelText: \"No\",\n      onOk: () => deleteRoom(roomId),\n    });\n  };\n\n  const columns = [\n    { title: \"roomid\", dataIndex: \"_id\", key: \"_id\" },\n    { title: \"name\", dataIndex: \"name\", key: \"name\" },\n    { title: \"maxcount\", dataIndex: \"maxcount\", key: \"maxcount\" },\n    { title: \"phonenumber\", dataIndex: \"phonenumber\", key: \"phonenumber\" },\n    { title: \"rentperday\", dataIndex: \"rentperday\", key: \"rentperday\" },\n    { title: \"type\", dataIndex: \"type\", key: \"type\" },\n    {\n      title: \"Actions\",\n      dataIndex: \"actions\",\n      key: \"actions\",\n      render: (text, record) => (\n        <div style={{ display: \"flex\", alignItems: \"center\", gap: \"20px\" }}>\n          <Button\n            type=\"link\"\n            style={{ padding: 0, border: \"none\", color: \"#1890ff\" }}\n            onClick={() => confirmUpdate(record)}\n          >\n            Update\n          </Button>\n          <Button\n            type=\"link\"\n            style={{ padding: 0, border: \"none\", color: \"#ff4d4f\" }}\n            onClick={() => confirmDelete(record._id)}\n          >\n            Delete\n          </Button>\n        </div>\n      ),\n    },\n  ];\n\n  async function fetchMyData() {\n    setError(\"\");\n    setLoading(true);\n    try {\n      const data = (await axios.post(\"/api/rooms/getallrooms\")).data;\n      setRooms(data);\n    } catch (error) {\n      console.log(error);\n      setError(error);\n    }\n    setLoading(false);\n  }\n\n  useEffect(() => {\n    fetchMyData();\n  }, []);\n\n  return (\n    <div className=\"row\">\n      {loading ? (\n        <Loader />\n      ) : error.length > 0 ? (\n        <Error msg={error} />\n      ) : (\n        <>\n          <div className=\"col md-12\">\n            <button className=\"btn btn-success\" onClick={fetchMyData}>\n              Refresh\n            </button>\n          </div>\n          <div className=\"col-md-12\">\n            <Table columns={columns} dataSource={rooms} />\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default AdminRoomScreen;\n"]},"metadata":{},"sourceType":"module"}