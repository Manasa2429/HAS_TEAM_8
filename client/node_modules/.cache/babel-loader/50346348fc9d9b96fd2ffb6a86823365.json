{"ast":null,"code":"var _jsxFileName = \"/home/apiiit123/Documents/vscode/Team-8-main/client/src/screens/FoodMenuScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Card, Row, Col, Button, Modal, notification, Form, Input } from \"antd\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FoodMenuScreen() {\n  _s();\n\n  const [foodItems, setFoodItems] = useState([]);\n  const [selectedFood, setSelectedFood] = useState(null);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [isAddModalVisible, setIsAddModalVisible] = useState(false);\n  const [isEditModalVisible, setIsEditModalVisible] = useState(false);\n  const [isDeleteModalVisible, setIsDeleteModalVisible] = useState(false);\n  useEffect(() => {\n    fetchFoodItems();\n  }, []);\n\n  const fetchFoodItems = async () => {\n    try {\n      const response = await axios.get('/api/food-items');\n      setFoodItems(response.data);\n    } catch (error) {\n      notification.error({\n        message: \"Failed to fetch food items\",\n        description: error.message\n      });\n    }\n  };\n\n  const handleAddFoodItem = async values => {\n    try {\n      const response = await axios.post('/api/food-items', values);\n      setFoodItems([...foodItems, response.data]);\n      setIsAddModalVisible(false);\n      notification.success({\n        message: \"Food Item Added\",\n        description: `${values.name} has been added to the menu.`\n      });\n    } catch (error) {\n      notification.error({\n        message: \"Failed to add food item\",\n        description: error.message\n      });\n    }\n  };\n\n  const handleEditFoodItem = async values => {\n    try {\n      const response = await axios.put(`/api/food-items/${selectedFood._id}`, values);\n      const updatedItems = foodItems.map(item => item._id === selectedFood._id ? response.data : item);\n      setFoodItems(updatedItems);\n      setIsEditModalVisible(false);\n      notification.success({\n        message: \"Food Item Updated\",\n        description: `${values.name} has been updated.`\n      });\n    } catch (error) {\n      notification.error({\n        message: \"Failed to update food item\",\n        description: error.message\n      });\n    }\n  };\n\n  const handleDeleteFoodItem = async () => {\n    try {\n      await axios.delete(`/api/food-items/${selectedFood._id}`);\n      const updatedItems = foodItems.filter(item => item._id !== selectedFood._id);\n      setFoodItems(updatedItems);\n      setIsDeleteModalVisible(false);\n      notification.success({\n        message: \"Food Item Deleted\",\n        description: `${selectedFood.name} has been deleted from the menu.`\n      });\n    } catch (error) {\n      notification.error({\n        message: \"Failed to delete food item\",\n        description: error.message\n      });\n    }\n  };\n\n  const handleViewDetails = food => {\n    setSelectedFood(food);\n    setIsModalVisible(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ml-3 mt-3 mr-3 bs\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center\",\n      children: \"Food Menu\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3 text-right\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: () => setIsAddModalVisible(true),\n        children: \"Add Menu Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      gutter: [16, 16],\n      children: foodItems.map(food => /*#__PURE__*/_jsxDEV(Col, {\n        xs: 24,\n        sm: 12,\n        md: 8,\n        lg: 6,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          title: food.name,\n          cover: /*#__PURE__*/_jsxDEV(\"img\", {\n            alt: food.name,\n            src: food.image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 22\n          }, this),\n          bordered: true,\n          extra: `$${food.price}`,\n          actions: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            onClick: () => {\n              setSelectedFood(food);\n              setIsEditModalVisible(true);\n            },\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"danger\",\n            onClick: () => {\n              setSelectedFood(food);\n              setIsDeleteModalVisible(true);\n            },\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            onClick: () => handleViewDetails(food),\n            children: \"View Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }, this)],\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: food.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)\n      }, food._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: selectedFood === null || selectedFood === void 0 ? void 0 : selectedFood.name,\n      visible: isModalVisible,\n      onCancel: () => setIsModalVisible(false),\n      footer: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setIsModalVisible(false),\n        children: \"Cancel\"\n      }, \"cancel\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: () => {\n          notification.success({\n            message: \"Added to Cart\",\n            description: `${selectedFood.name} has been added to your cart.`\n          });\n          setIsModalVisible(false);\n        },\n        children: \"Add to Cart\"\n      }, \"add\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this)],\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Price:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 12\n        }, this), \" $\", selectedFood === null || selectedFood === void 0 ? void 0 : selectedFood.price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: selectedFood === null || selectedFood === void 0 ? void 0 : selectedFood.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: selectedFood === null || selectedFood === void 0 ? void 0 : selectedFood.name,\n        src: selectedFood === null || selectedFood === void 0 ? void 0 : selectedFood.image,\n        style: {\n          width: \"100%\",\n          height: \"auto\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Add New Food Item\",\n      visible: isAddModalVisible,\n      onCancel: () => setIsAddModalVisible(false),\n      footer: null,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        layout: \"vertical\",\n        onFinish: handleAddFoodItem,\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Name\",\n          name: \"name\",\n          rules: [{\n            required: true,\n            message: \"Please enter the food name\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Enter food name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Price\",\n          name: \"price\",\n          rules: [{\n            required: true,\n            message: \"Please enter the price\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            type: \"number\",\n            placeholder: \"Enter price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Description\",\n          name: \"description\",\n          rules: [{\n            required: true,\n            message: \"Please enter a description\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Enter description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Image URL\",\n          name: \"image\",\n          rules: [{\n            required: true,\n            message: \"Please enter the image URL\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Enter image URL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            children: \"Add Food Item\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Edit Food Item\",\n      visible: isEditModalVisible,\n      onCancel: () => setIsEditModalVisible(false),\n      footer: null,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        layout: \"vertical\",\n        initialValues: selectedFood,\n        onFinish: handleEditFoodItem,\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Name\",\n          name: \"name\",\n          rules: [{\n            required: true,\n            message: \"Please enter the food name\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Enter food name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Price\",\n          name: \"price\",\n          rules: [{\n            required: true,\n            message: \"Please enter the price\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            type: \"number\",\n            placeholder: \"Enter price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Description\",\n          name: \"description\",\n          rules: [{\n            required: true,\n            message: \"Please enter a description\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Enter description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Image URL\",\n          name: \"image\",\n          rules: [{\n            required: true,\n            message: \"Please enter the image URL\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Enter image URL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            children: \"Update Food Item\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Delete Food Item\",\n      visible: isDeleteModalVisible,\n      onCancel: () => setIsDeleteModalVisible(false),\n      footer: null,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Are you sure you want to delete \", selectedFood === null || selectedFood === void 0 ? void 0 : selectedFood.name, \"?\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"danger\",\n        onClick: handleDeleteFoodItem,\n        children: \"Yes, Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setIsDeleteModalVisible(false),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FoodMenuScreen, \"eNix0RfvC9OtVCxtAnd7vpUwdTY=\");\n\n_c = FoodMenuScreen;\nexport default FoodMenuScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"FoodMenuScreen\");","map":{"version":3,"sources":["/home/apiiit123/Documents/vscode/Team-8-main/client/src/screens/FoodMenuScreen.js"],"names":["React","useState","useEffect","Card","Row","Col","Button","Modal","notification","Form","Input","axios","FoodMenuScreen","foodItems","setFoodItems","selectedFood","setSelectedFood","isModalVisible","setIsModalVisible","isAddModalVisible","setIsAddModalVisible","isEditModalVisible","setIsEditModalVisible","isDeleteModalVisible","setIsDeleteModalVisible","fetchFoodItems","response","get","data","error","message","description","handleAddFoodItem","values","post","success","name","handleEditFoodItem","put","_id","updatedItems","map","item","handleDeleteFoodItem","delete","filter","handleViewDetails","food","image","price","width","height","required"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Card, Row, Col, Button, Modal, notification, Form, Input } from \"antd\";\nimport axios from \"axios\";\n\nfunction FoodMenuScreen() {\n  const [foodItems, setFoodItems] = useState([]);\n  const [selectedFood, setSelectedFood] = useState(null);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [isAddModalVisible, setIsAddModalVisible] = useState(false);\n  const [isEditModalVisible, setIsEditModalVisible] = useState(false);\n  const [isDeleteModalVisible, setIsDeleteModalVisible] = useState(false);\n\n  useEffect(() => {\n    fetchFoodItems();\n  }, []);\n\n  const fetchFoodItems = async () => {\n    try {\n      const response = await axios.get('/api/food-items');\n      setFoodItems(response.data);\n    } catch (error) {\n      notification.error({\n        message: \"Failed to fetch food items\",\n        description: error.message,\n      });\n    }\n  };\n\n  const handleAddFoodItem = async (values) => {\n    try {\n      const response = await axios.post('/api/food-items', values);\n      setFoodItems([...foodItems, response.data]);\n      setIsAddModalVisible(false);\n      notification.success({\n        message: \"Food Item Added\",\n        description: `${values.name} has been added to the menu.`,\n      });\n    } catch (error) {\n      notification.error({\n        message: \"Failed to add food item\",\n        description: error.message,\n      });\n    }\n  };\n\n  const handleEditFoodItem = async (values) => {\n    try {\n      const response = await axios.put(`/api/food-items/${selectedFood._id}`, values);\n      const updatedItems = foodItems.map((item) =>\n        item._id === selectedFood._id ? response.data : item\n      );\n      setFoodItems(updatedItems);\n      setIsEditModalVisible(false);\n      notification.success({\n        message: \"Food Item Updated\",\n        description: `${values.name} has been updated.`,\n      });\n    } catch (error) {\n      notification.error({\n        message: \"Failed to update food item\",\n        description: error.message,\n      });\n    }\n  };\n\n  const handleDeleteFoodItem = async () => {\n    try {\n      await axios.delete(`/api/food-items/${selectedFood._id}`);\n      const updatedItems = foodItems.filter((item) => item._id !== selectedFood._id);\n      setFoodItems(updatedItems);\n      setIsDeleteModalVisible(false);\n      notification.success({\n        message: \"Food Item Deleted\",\n        description: `${selectedFood.name} has been deleted from the menu.`,\n      });\n    } catch (error) {\n      notification.error({\n        message: \"Failed to delete food item\",\n        description: error.message,\n      });\n    }\n  };\n\n  const handleViewDetails = (food) => {\n    setSelectedFood(food);\n    setIsModalVisible(true);\n  };\n\n  return (\n    <div className=\"ml-3 mt-3 mr-3 bs\">\n      <h1 className=\"text-center\">Food Menu</h1>\n      <div className=\"mb-3 text-right\">\n        <Button type=\"primary\" onClick={() => setIsAddModalVisible(true)}>\n          Add Menu Item\n        </Button>\n      </div>\n      <Row gutter={[16, 16]}>\n        {foodItems.map((food) => (\n          <Col key={food._id} xs={24} sm={12} md={8} lg={6}>\n            <Card\n              title={food.name}\n              cover={<img alt={food.name} src={food.image} />}\n              bordered={true}\n              extra={`$${food.price}`}\n              actions={[\n                <Button type=\"primary\" onClick={() => { setSelectedFood(food); setIsEditModalVisible(true); }}>\n                  Edit\n                </Button>,\n                <Button type=\"danger\" onClick={() => { setSelectedFood(food); setIsDeleteModalVisible(true); }}>\n                  Delete\n                </Button>,\n                <Button type=\"primary\" onClick={() => handleViewDetails(food)}>\n                  View Details\n                </Button>,\n              ]}\n            >\n              <p>{food.description}</p>\n            </Card>\n          </Col>\n        ))}\n      </Row>\n\n      {/* View Details Modal */}\n      <Modal\n        title={selectedFood?.name}\n        visible={isModalVisible}\n        onCancel={() => setIsModalVisible(false)}\n        footer={[\n          <Button key=\"cancel\" onClick={() => setIsModalVisible(false)}>\n            Cancel\n          </Button>,\n          <Button key=\"add\" type=\"primary\" onClick={() => {\n            notification.success({\n              message: \"Added to Cart\",\n              description: `${selectedFood.name} has been added to your cart.`,\n            });\n            setIsModalVisible(false);\n          }}>\n            Add to Cart\n          </Button>,\n        ]}\n      >\n        <p><strong>Price:</strong> ${selectedFood?.price}</p>\n        <p>{selectedFood?.description}</p>\n        <img alt={selectedFood?.name} src={selectedFood?.image} style={{ width: \"100%\", height: \"auto\" }} />\n      </Modal>\n\n      {/* Add New Food Item Modal */}\n      <Modal\n        title=\"Add New Food Item\"\n        visible={isAddModalVisible}\n        onCancel={() => setIsAddModalVisible(false)}\n        footer={null}\n      >\n        <Form layout=\"vertical\" onFinish={handleAddFoodItem}>\n          <Form.Item label=\"Name\" name=\"name\" rules={[{ required: true, message: \"Please enter the food name\" }]}>\n            <Input placeholder=\"Enter food name\" />\n          </Form.Item>\n          <Form.Item label=\"Price\" name=\"price\" rules={[{ required: true, message: \"Please enter the price\" }]}>\n            <Input type=\"number\" placeholder=\"Enter price\" />\n          </Form.Item>\n          <Form.Item label=\"Description\" name=\"description\" rules={[{ required: true, message: \"Please enter a description\" }]}>\n            <Input placeholder=\"Enter description\" />\n          </Form.Item>\n          <Form.Item label=\"Image URL\" name=\"image\" rules={[{ required: true, message: \"Please enter the image URL\" }]}>\n            <Input placeholder=\"Enter image URL\" />\n          </Form.Item>\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Add Food Item\n            </Button>\n          </Form.Item>\n        </Form>\n      </Modal>\n\n      {/* Edit Food Item Modal */}\n      <Modal\n        title=\"Edit Food Item\"\n        visible={isEditModalVisible}\n        onCancel={() => setIsEditModalVisible(false)}\n        footer={null}\n      >\n        <Form layout=\"vertical\" initialValues={selectedFood} onFinish={handleEditFoodItem}>\n          <Form.Item label=\"Name\" name=\"name\" rules={[{ required: true, message: \"Please enter the food name\" }]}>\n            <Input placeholder=\"Enter food name\" />\n          </Form.Item>\n          <Form.Item label=\"Price\" name=\"price\" rules={[{ required: true, message: \"Please enter the price\" }]}>\n            <Input type=\"number\" placeholder=\"Enter price\" />\n          </Form.Item>\n          <Form.Item label=\"Description\" name=\"description\" rules={[{ required: true, message: \"Please enter a description\" }]}>\n            <Input placeholder=\"Enter description\" />\n          </Form.Item>\n          <Form.Item label=\"Image URL\" name=\"image\" rules={[{ required: true, message: \"Please enter the image URL\" }]}>\n            <Input placeholder=\"Enter image URL\" />\n          </Form.Item>\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Update Food Item\n            </Button>\n          </Form.Item>\n        </Form>\n      </Modal>\n\n      {/* Delete Food Item Modal */}\n      <Modal\n        title=\"Delete Food Item\"\n        visible={isDeleteModalVisible}\n        onCancel={() => setIsDeleteModalVisible(false)}\n        footer={null}\n      >\n        <p>Are you sure you want to delete {selectedFood?.name}?</p>\n        <Button type=\"danger\" onClick={handleDeleteFoodItem}>\n          Yes, Delete\n        </Button>\n        <Button onClick={() => setIsDeleteModalVisible(false)}>\n          Cancel\n        </Button>\n      </Modal>\n    </div>\n  );\n}\n\nexport default FoodMenuScreen;\n"]},"metadata":{},"sourceType":"module"}