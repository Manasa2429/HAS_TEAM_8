{"ast":null,"code":"var _jsxFileName = \"/home/apiiit123/Documents/vscode/Team-8-main/client/src/screens/FoodOrdersScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Table, Button, Modal, Form, InputNumber, Select, notification } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\n\nfunction FoodOrdersScreen() {\n  _s();\n\n  const user = JSON.parse(localStorage.getItem(\"currentUser\"));\n  const [foodItems, setFoodItems] = useState([]);\n  const [cart, setCart] = useState([]);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [selectedFood, setSelectedFood] = useState(null);\n  const [quantity, setQuantity] = useState(1);\n  useEffect(() => {\n    if (!user) {\n      window.location.href = \"/home\";\n    }\n\n    fetchFoodItems();\n  }, []);\n\n  const fetchFoodItems = () => {\n    // Simulate fetching food items from an API\n    const fetchedItems = [{\n      key: 1,\n      name: \"Pizza\",\n      price: 10\n    }, {\n      key: 2,\n      name: \"Burger\",\n      price: 5\n    }, {\n      key: 3,\n      name: \"Pasta\",\n      price: 7\n    }];\n    setFoodItems(fetchedItems);\n  };\n\n  const handleAddToCart = () => {\n    if (!selectedFood) {\n      notification.error({\n        message: \"Error\",\n        description: \"Please select a food item.\"\n      });\n      return;\n    }\n\n    const existingItem = cart.find(item => item.key === selectedFood.key);\n\n    if (existingItem) {\n      setCart(cart.map(item => item.key === selectedFood.key ? { ...item,\n        quantity: item.quantity + quantity\n      } : item));\n    } else {\n      setCart([...cart, { ...selectedFood,\n        quantity\n      }]);\n    }\n\n    setIsModalVisible(false);\n    setQuantity(1);\n    notification.success({\n      message: \"Added to Cart\",\n      description: `${selectedFood.name} has been added to your cart.`\n    });\n  };\n\n  const handleRemoveFromCart = key => {\n    setCart(cart.filter(item => item.key !== key));\n  };\n\n  const calculateTotal = () => {\n    return cart.reduce((total, item) => total + item.price * item.quantity, 0).toFixed(2);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ml-3 mt-3 mr-3 bs\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center\",\n      children: \"Food Order Screen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3 text-right\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: () => setIsModalVisible(true),\n        children: \"Add Food to Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      dataSource: cart,\n      columns: [{\n        title: \"Name\",\n        dataIndex: \"name\",\n        key: \"name\"\n      }, {\n        title: \"Price\",\n        dataIndex: \"price\",\n        key: \"price\",\n        render: price => `$${price}`\n      }, {\n        title: \"Quantity\",\n        dataIndex: \"quantity\",\n        key: \"quantity\"\n      }, {\n        title: \"Total\",\n        key: \"total\",\n        render: (text, record) => `$${(record.price * record.quantity).toFixed(2)}`\n      }, {\n        title: \"Actions\",\n        key: \"actions\",\n        render: (text, record) => /*#__PURE__*/_jsxDEV(Button, {\n          type: \"danger\",\n          onClick: () => handleRemoveFromCart(record.key),\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this)\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-right\",\n      children: [\"Total: $\", calculateTotal()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Add Food to Cart\",\n      visible: isModalVisible,\n      onCancel: () => setIsModalVisible(false),\n      onOk: handleAddToCart,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        layout: \"vertical\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Food Item\",\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            placeholder: \"Select a food item\",\n            onChange: key => setSelectedFood(foodItems.find(item => item.key === key)),\n            children: foodItems.map(item => /*#__PURE__*/_jsxDEV(Option, {\n              value: item.key,\n              children: [item.name, \" - $\", item.price]\n            }, item.key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Quantity\",\n          children: /*#__PURE__*/_jsxDEV(InputNumber, {\n            min: 1,\n            value: quantity,\n            onChange: value => setQuantity(value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FoodOrdersScreen, \"KcmXtbOHuHdZLTrSlPPdoC40TxM=\");\n\n_c = FoodOrdersScreen;\nexport default FoodOrdersScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"FoodOrdersScreen\");","map":{"version":3,"sources":["/home/apiiit123/Documents/vscode/Team-8-main/client/src/screens/FoodOrdersScreen.js"],"names":["React","useState","useEffect","Table","Button","Modal","Form","InputNumber","Select","notification","Option","FoodOrdersScreen","user","JSON","parse","localStorage","getItem","foodItems","setFoodItems","cart","setCart","isModalVisible","setIsModalVisible","selectedFood","setSelectedFood","quantity","setQuantity","window","location","href","fetchFoodItems","fetchedItems","key","name","price","handleAddToCart","error","message","description","existingItem","find","item","map","success","handleRemoveFromCart","filter","calculateTotal","reduce","total","toFixed","title","dataIndex","render","text","record","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Table, Button, Modal, Form, InputNumber, Select, notification } from \"antd\";\n\nconst { Option } = Select;\n\nfunction FoodOrdersScreen() {\n  const user = JSON.parse(localStorage.getItem(\"currentUser\"));\n  const [foodItems, setFoodItems] = useState([]);\n  const [cart, setCart] = useState([]);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [selectedFood, setSelectedFood] = useState(null);\n  const [quantity, setQuantity] = useState(1);\n\n  useEffect(() => {\n    if (!user) {\n      window.location.href = \"/home\";\n    }\n    fetchFoodItems();\n  }, []);\n\n  const fetchFoodItems = () => {\n    // Simulate fetching food items from an API\n    const fetchedItems = [\n      { key: 1, name: \"Pizza\", price: 10 },\n      { key: 2, name: \"Burger\", price: 5 },\n      { key: 3, name: \"Pasta\", price: 7 },\n    ];\n    setFoodItems(fetchedItems);\n  };\n\n  const handleAddToCart = () => {\n    if (!selectedFood) {\n      notification.error({\n        message: \"Error\",\n        description: \"Please select a food item.\"\n      });\n      return;\n    }\n    const existingItem = cart.find((item) => item.key === selectedFood.key);\n    if (existingItem) {\n      setCart(\n        cart.map((item) =>\n          item.key === selectedFood.key\n            ? { ...item, quantity: item.quantity + quantity }\n            : item\n        )\n      );\n    } else {\n      setCart([...cart, { ...selectedFood, quantity }]);\n    }\n    setIsModalVisible(false);\n    setQuantity(1);\n    notification.success({\n      message: \"Added to Cart\",\n      description: `${selectedFood.name} has been added to your cart.`\n    });\n  };\n\n  const handleRemoveFromCart = (key) => {\n    setCart(cart.filter((item) => item.key !== key));\n  };\n\n  const calculateTotal = () => {\n    return cart.reduce((total, item) => total + item.price * item.quantity, 0).toFixed(2);\n  };\n\n  return (\n    <div className=\"ml-3 mt-3 mr-3 bs\">\n      <h1 className=\"text-center\">Food Order Screen</h1>\n\n      <div className=\"mb-3 text-right\">\n        <Button type=\"primary\" onClick={() => setIsModalVisible(true)}>\n          Add Food to Cart\n        </Button>\n      </div>\n\n      <Table\n        dataSource={cart}\n        columns={[\n          { title: \"Name\", dataIndex: \"name\", key: \"name\" },\n          { title: \"Price\", dataIndex: \"price\", key: \"price\", render: (price) => `$${price}` },\n          { title: \"Quantity\", dataIndex: \"quantity\", key: \"quantity\" },\n          {\n            title: \"Total\",\n            key: \"total\",\n            render: (text, record) => `$${(record.price * record.quantity).toFixed(2)}`,\n          },\n          {\n            title: \"Actions\",\n            key: \"actions\",\n            render: (text, record) => (\n              <Button type=\"danger\" onClick={() => handleRemoveFromCart(record.key)}>\n                Remove\n              </Button>\n            ),\n          },\n        ]}\n      />\n\n      <h3 className=\"text-right\">Total: ${calculateTotal()}</h3>\n\n      <Modal\n        title=\"Add Food to Cart\"\n        visible={isModalVisible}\n        onCancel={() => setIsModalVisible(false)}\n        onOk={handleAddToCart}\n      >\n        <Form layout=\"vertical\">\n          <Form.Item label=\"Food Item\">\n            <Select\n              placeholder=\"Select a food item\"\n              onChange={(key) => setSelectedFood(foodItems.find((item) => item.key === key))}\n            >\n              {foodItems.map((item) => (\n                <Option key={item.key} value={item.key}>\n                  {item.name} - ${item.price}\n                </Option>\n              ))}\n            </Select>\n          </Form.Item>\n          <Form.Item label=\"Quantity\">\n            <InputNumber\n              min={1}\n              value={quantity}\n              onChange={(value) => setQuantity(value)}\n            />\n          </Form.Item>\n        </Form>\n      </Modal>\n    </div>\n  );\n}\n\nexport default FoodOrdersScreen;\n"]},"metadata":{},"sourceType":"module"}